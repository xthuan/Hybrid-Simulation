<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="17:MasterAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efff53f99f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efff5843440"/></to>
    </wire>
    <wire loc="72:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efff5843440"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efff5679590"/></to>
    </wire>
    <wire loc="18:MasterAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff53f6080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff56610d0"/></to>
    </wire>
    <wire loc="51:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff56610d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff565fa70"/></to>
    </wire>
    <wire loc="20:MasterAppC.nc">
      <from><interface-ref name="USBTimer" scoped="" ref="0x7efff537fe40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff4e92640"/></to>
    </wire>
    <wire loc="52:/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff4e92640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e89610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:MasterAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7efff53efa80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efff5362320"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efff5362320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efff52dd2f0"/></to>
    </wire>
    <wire loc="23:MasterAppC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7efff5396190"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efff4c86da0"/></to>
    </wire>
    <wire loc="63:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efff4c86da0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efff45d2d70"/></to>
    </wire>
    <wire loc="24:MasterAppC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7efff538b250"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efff4c85a10"/></to>
    </wire>
    <wire loc="64:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efff4c85a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efff5360b40"/></to>
    </wire>
    <wire loc="25:MasterAppC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7efff5388b50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efff4c7a810"/></to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efff4c7a810"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efff5360530"/>
      <arguments>
        <value cst="I:116">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/xthuan/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5842900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff4e82c50"/></to>
    </wire>
    <wire loc="103:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5842900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff46b93b0"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5842900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff52e0bc0"/></to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efff5679c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efff5cdb3a0"/></to>
    </wire>
    <wire loc="53:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efff5cdb3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efff5886140"/></to>
    </wire>
    <wire loc="68:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efff56786c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff5845930"/></to>
    </wire>
    <wire loc="48:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff5845930"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff5840b60"/></to>
    </wire>
    <wire loc="71:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5678dc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5842900"/></to>
    </wire>
    <wire loc="49:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efff583d3b0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7efff581f020"/></to>
    </wire>
    <wire loc="46:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efff581f020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff581c020"/></to>
    </wire>
    <wire loc="50:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7efff583da90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff583fd90"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7efff583c1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff56362e0"/></to>
    </wire>
    <wire loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff581c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff5806cb0"/></to>
    </wire>
    <wire loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efff58156c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efff58053d0"/></to>
    </wire>
    <wire loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efff595e4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7efff5804680"/></to>
    </wire>
    <wire loc="113:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7efff57c15a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56fd6d0"/></to>
    </wire>
    <wire loc="126:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7efff57af020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56f6b30"/></to>
    </wire>
    <wire loc="108:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7efff57b8700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff5703160"/></to>
    </wire>
    <wire loc="149:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7efff579ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56dccb0"/></to>
    </wire>
    <wire loc="107:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7efff57bfaa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff5704480"/></to>
    </wire>
    <wire loc="148:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7efff57a2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56dc020"/></to>
    </wire>
    <wire loc="170:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7efff5799a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56c5cb0"/></to>
    </wire>
    <wire loc="154:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7efff57aa5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56d6220"/></to>
    </wire>
    <wire loc="99:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7efff57c2b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff57539d0"/></to>
    </wire>
    <wire loc="135:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7efff579ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56eb2f0"/></to>
    </wire>
    <wire loc="134:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7efff57a43e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56ec610"/></to>
    </wire>
    <wire loc="133:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7efff57ae5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56ed220"/></to>
    </wire>
    <wire loc="115:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7efff57b7700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56fb7a0"/></to>
    </wire>
    <wire loc="156:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7efff579ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56d42f0"/></to>
    </wire>
    <wire loc="140:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7efff57adbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56e66d0"/></to>
    </wire>
    <wire loc="114:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7efff57be890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56fcac0"/></to>
    </wire>
    <wire loc="93:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7efff57d2060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff5761540"/></to>
    </wire>
    <wire loc="155:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7efff57a2da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56d5610"/></to>
    </wire>
    <wire loc="106:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7efff57c80c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff5705020"/></to>
    </wire>
    <wire loc="161:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7efff57a9a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56cf6d0"/></to>
    </wire>
    <wire loc="101:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7efff57b26d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff570ba90"/></to>
    </wire>
    <wire loc="142:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7efff579da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56e47a0"/></to>
    </wire>
    <wire loc="100:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7efff57bacf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff570cde0"/></to>
    </wire>
    <wire loc="141:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7efff57a31f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56e5ac0"/></to>
    </wire>
    <wire loc="163:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7efff579aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56cc7a0"/></to>
    </wire>
    <wire loc="147:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7efff57ab0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56dfb30"/></to>
    </wire>
    <wire loc="120:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="162:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7efff57a1b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56cdac0"/></to>
    </wire>
    <wire loc="128:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7efff579fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efff56f4cb0"/></to>
    </wire>
    <wire loc="169:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7efff57a0a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56c5020"/></to>
    </wire>
    <wire loc="127:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7efff57a5570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efff56f4020"/></to>
    </wire>
    <wire loc="168:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7efff57a6020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efff56c7b30"/></to>
    </wire>
    <wire loc="94:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efff575f450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5760d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efff575faa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7efff56c0aa0"/></to>
    </wire>
    <wire loc="96:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efff575e120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7efff56bd260"/></to>
    </wire>
    <wire loc="102:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff570a930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff5761540"/></to>
    </wire>
    <wire loc="103:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff5708020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5760d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff5702020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff5761540"/></to>
    </wire>
    <wire loc="110:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff57017a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5760d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56fa610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff5761540"/></to>
    </wire>
    <wire loc="117:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56f9c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5760d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efff57572f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efff5757940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7efff56bd9f0"/></to>
    </wire>
    <wire loc="123:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efff5756020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7efff56bb240"/></to>
    </wire>
    <wire loc="129:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56f3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="130:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56f12f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56ea160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="137:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56e97a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56e3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="144:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56e2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56dbb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="151:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56d92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56d3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="158:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56d27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56cb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="165:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56cac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efff56c4b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></to>
    </wire>
    <wire loc="172:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efff56c22f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5884040"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7efff5880490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7efff5c723b0"/></to>
    </wire>
    <wire loc="53:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff56362e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff565f470"/></to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efff565c060"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7efff5660af0"/></to>
    </wire>
    <wire loc="58:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efff5660af0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efff541f020"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efff565b340"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7efff5639cf0"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efff5639cf0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efff540bb90"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efff5656660"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7efff5637020"/></to>
    </wire>
    <wire loc="64:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efff5637020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efff5406710"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff540e2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7efff55df9a0"/></to>
    </wire>
    <wire loc="486:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7efff55df9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54bcd10"/></to>
    </wire>
    <wire loc="62:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff540ade0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7efff55dd9a0"/></to>
    </wire>
    <wire loc="487:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7efff55dd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54b7740"/></to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff5405930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7efff55db9a0"/></to>
    </wire>
    <wire loc="488:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7efff55db9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54b2100"/></to>
    </wire>
    <wire loc="442:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efff5621810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5555740"/></to>
    </wire>
    <wire loc="455:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efff560c810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5525100"/></to>
    </wire>
    <wire loc="531:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7efff55c3ca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5516100"/></to>
    </wire>
    <wire loc="551:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7efff559ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff548c740"/></to>
    </wire>
    <wire loc="532:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7efff55c1cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5512d10"/></to>
    </wire>
    <wire loc="460:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7efff5608810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff551c740"/></to>
    </wire>
    <wire loc="473:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7efff55f49a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54eb460"/></to>
    </wire>
    <wire loc="497:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7efff55cf9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5495100"/></to>
    </wire>
    <wire loc="535:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7efff55bbcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5508100"/></to>
    </wire>
    <wire loc="545:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7efff55aacb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54a8740"/></to>
    </wire>
    <wire loc="557:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7efff5596cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5486100"/></to>
    </wire>
    <wire loc="445:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efff561b810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5547740"/></to>
    </wire>
    <wire loc="536:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7efff55b9cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5504d10"/></to>
    </wire>
    <wire loc="450:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efff5617810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff553dd10"/></to>
    </wire>
    <wire loc="463:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7efff5602810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff550d740"/></to>
    </wire>
    <wire loc="476:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7efff55ee9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54dd100"/></to>
    </wire>
    <wire loc="489:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7efff55d99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54aed10"/></to>
    </wire>
    <wire loc="500:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7efff55c99a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5486100"/></to>
    </wire>
    <wire loc="440:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efff5625810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff555e100"/></to>
    </wire>
    <wire loc="453:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efff5610810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff552fd80"/></to>
    </wire>
    <wire loc="466:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7efff55fc810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54ff740"/></to>
    </wire>
    <wire loc="530:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7efff55c5cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5516100"/></to>
    </wire>
    <wire loc="548:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7efff55a4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff549a740"/></to>
    </wire>
    <wire loc="555:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7efff5598cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5486100"/></to>
    </wire>
    <wire loc="541:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7efff55b0cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54c0100"/></to>
    </wire>
    <wire loc="471:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7efff55f8810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54f5e60"/></to>
    </wire>
    <wire loc="484:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7efff55e39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54c5740"/></to>
    </wire>
    <wire loc="495:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7efff55d39a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff549fd10"/></to>
    </wire>
    <wire loc="549:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7efff55a2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5495100"/></to>
    </wire>
    <wire loc="538:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7efff55b7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54ce100"/></to>
    </wire>
    <wire loc="443:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efff561f810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5550100"/></to>
    </wire>
    <wire loc="456:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efff560a810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5521d10"/></to>
    </wire>
    <wire loc="493:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7efff55d79a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54a8740"/></to>
    </wire>
    <wire loc="461:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7efff5606810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5516100"/></to>
    </wire>
    <wire loc="474:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7efff55f29a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54e7e00"/></to>
    </wire>
    <wire loc="498:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7efff55cd9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5491d10"/></to>
    </wire>
    <wire loc="540:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7efff55b2cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54c5740"/></to>
    </wire>
    <wire loc="438:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efff5627870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff558fd10"/></to>
    </wire>
    <wire loc="451:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efff5615810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5538740"/></to>
    </wire>
    <wire loc="464:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7efff5600810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5508100"/></to>
    </wire>
    <wire loc="477:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7efff55ec9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54d9d10"/></to>
    </wire>
    <wire loc="542:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7efff55aecc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54ff740"/></to>
    </wire>
    <wire loc="546:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7efff55a8cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54a3100"/></to>
    </wire>
    <wire loc="552:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7efff559ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5486100"/></to>
    </wire>
    <wire loc="482:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7efff55e89a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54ce100"/></to>
    </wire>
    <wire loc="543:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7efff55accc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54fa100"/></to>
    </wire>
    <wire loc="441:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efff5623810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff555ad10"/></to>
    </wire>
    <wire loc="454:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efff560e810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff552a740"/></to>
    </wire>
    <wire loc="467:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7efff55fa810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54fa100"/></to>
    </wire>
    <wire loc="539:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7efff55b4cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54cad10"/></to>
    </wire>
    <wire loc="550:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7efff55a0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5491d10"/></to>
    </wire>
    <wire loc="472:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7efff55f69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54f09f0"/></to>
    </wire>
    <wire loc="485:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7efff55e19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54c0100"/></to>
    </wire>
    <wire loc="496:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7efff55d19a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff549a740"/></to>
    </wire>
    <wire loc="444:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efff561d810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff554cd10"/></to>
    </wire>
    <wire loc="494:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7efff55d59a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54a3100"/></to>
    </wire>
    <wire loc="449:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efff5619810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5542100"/></to>
    </wire>
    <wire loc="462:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7efff5604810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5512d10"/></to>
    </wire>
    <wire loc="475:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7efff55f09a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54e2740"/></to>
    </wire>
    <wire loc="499:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7efff55cb9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff548c740"/></to>
    </wire>
    <wire loc="439:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efff5631810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5563740"/></to>
    </wire>
    <wire loc="452:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efff5612810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5533100"/></to>
    </wire>
    <wire loc="465:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7efff55fe810"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff5504d10"/></to>
    </wire>
    <wire loc="478:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7efff55ea9a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54d4740"/></to>
    </wire>
    <wire loc="534:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7efff55bdca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff550d740"/></to>
    </wire>
    <wire loc="547:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7efff55a6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff549fd10"/></to>
    </wire>
    <wire loc="533:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7efff55bfcc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff550d740"/></to>
    </wire>
    <wire loc="483:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7efff55e69a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54cad10"/></to>
    </wire>
    <wire loc="554:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7efff559acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff548c740"/></to>
    </wire>
    <wire loc="558:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7efff5594cc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff54aed10"/></to>
    </wire>
    <wire loc="529:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7efff55c79f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efff551c740"/></to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efff52dd2f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efff52cb450"/></to>
    </wire>
    <wire loc="63:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efff5361370"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efff53437d0"/></to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efff5360b40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efff52e4400"/></to>
    </wire>
    <wire loc="64:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efff5360530"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efff52e66c0"/></to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efff534d020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efff52e3060"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efff52e6cb0"/></to>
    </wire>
    <wire loc="69:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff52e0bc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff52cdd60"/></to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff52d9940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff534d9a0"/></to>
    </wire>
    <wire loc="69:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efff52e39f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efff52dce10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efff52e2760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efff52dc320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efff52d9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7efff4ea48d0"/></to>
    </wire>
    <wire loc="64:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efff52dce10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efff519a830"/></to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efff52dc320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efff519a110"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7efff5199760"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efff52d9020"/></to>
    </wire>
    <wire loc="70:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff52c4dc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff52d9940"/></to>
    </wire>
    <wire loc="71:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff5196590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff52d9940"/></to>
    </wire>
    <wire loc="72:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff518ecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff52d9940"/></to>
    </wire>
    <wire loc="74:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efff51980e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efff52c1ad0"/></to>
    </wire>
    <wire loc="75:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7efff51989d0"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7efff52c54a0"/></to>
    </wire>
    <wire loc="77:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7efff52bbe30"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7efff5192b70"/></to>
    </wire>
    <wire loc="78:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7efff52b7e00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efff51680c0"/></to>
    </wire>
    <wire loc="17:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efff51680c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efff4eb70c0"/></to>
    </wire>
    <wire loc="80:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efff5184d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efff51688d0"/></to>
    </wire>
    <wire loc="13:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efff51688d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efff4ebd440"/></to>
    </wire>
    <wire loc="332:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7efff5264e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7efff529bd10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7efff5266400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efff525f0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7efff5195c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7efff5194480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efff5166020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efff4ebc440"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efff4ebc440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efff50fa210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efff4ebd440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efff50feb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff4ebb020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff4eb7920"/></to>
    </wire>
    <wire loc="19:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff4eb6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff4ebe020"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff4ebe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff5100320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4ebec70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efff473c020"/></to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efff473c020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4f87d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff50f8600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff4ebb020"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4735440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff50fcdd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efff50f9370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff473d340"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff473d340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff4f88a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efff50f3be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff4736c10"/></to>
    </wire>
    <wire loc="63:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff4736c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efff4f8bce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff50fcdd0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff506be70"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efff50fa210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efff5068890"/></to>
    </wire>
    <wire loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efff50feb50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efff506a790"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff5100320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff506b0d0"/></to>
    </wire>
    <wire loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff50663e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff50f8600"/></to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efff50675b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efff50f9370"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efff50615b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efff50f3be0"/></to>
    </wire>
    <wire loc="64:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efff5066a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff5051d30"/></to>
    </wire>
    <wire loc="88:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff5051d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efff504a550"/></to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efff5060020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efff4fbd110"/></to>
    </wire>
    <wire loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efff4fbd110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efff4fb8210"/></to>
    </wire>
    <wire loc="70:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efff505e120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efff56610d0"/></to>
    </wire>
    <wire loc="89:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff504e860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efff5045130"/></to>
    </wire>
    <wire loc="87:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff5051500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff504dbd0"/></to>
    </wire>
    <wire loc="91:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efff5045a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7efff55b4cc0"/></to>
    </wire>
    <wire loc="92:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efff5043990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7efff55b2cc0"/></to>
    </wire>
    <wire loc="93:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efff5041990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7efff55b0cc0"/></to>
    </wire>
    <wire loc="94:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efff503f990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7efff55accc0"/></to>
    </wire>
    <wire loc="95:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efff503d990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7efff55aecc0"/></to>
    </wire>
    <wire loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efff4fb8210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efff4fb32a0"/></to>
    </wire>
    <wire loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4fa5450"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff473a020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff5051d30"/></to>
    </wire>
    <wire loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff473c7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4f85590"/></to>
    </wire>
    <wire loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4f85590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ef2060"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4f84370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4735440"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4f87d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4ef4bf0"/></to>
    </wire>
    <wire loc="106:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4ef4bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efff46b5a60"/></to>
    </wire>
    <wire loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efff4f8bce0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efff4f815c0"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff4f88a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff4ef5e60"/></to>
    </wire>
    <wire loc="105:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efff4ef5e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efff46b6c80"/></to>
    </wire>
    <wire loc="108:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ef2060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff46b4e80"/></to>
    </wire>
    <wire loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efff4f6f690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff504e860"/></to>
    </wire>
    <wire loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4ef2930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4f84370"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4f6e4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ef2060"/></to>
    </wire>
    <wire loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ed79d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ef3400"/></to>
    </wire>
    <wire loc="107:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ef3400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff46b4270"/></to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff4eedb20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff5051500"/></to>
    </wire>
    <wire loc="109:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff46b3790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4ef2930"/></to>
    </wire>
    <wire loc="111:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efff46b2020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efff46b99c0"/></to>
    </wire>
    <wire loc="75:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efff46af160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff4680900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff4eedb20"/></to>
    </wire>
    <wire loc="82:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efff467f0e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efff4ed7400"/></to>
    </wire>
    <wire loc="84:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff467f6b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ed79d0"/></to>
    </wire>
    <wire loc="85:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff467e400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ed6720"/></to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e89610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e7fa40"/></to>
    </wire>
    <wire loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e7fa40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff4d24690"/></to>
    </wire>
    <wire loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff4e82c50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff4da1760"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7efff4e75500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efff4d16cf0"/></to>
    </wire>
    <wire loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff4da1760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff466fa10"/></to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7efff4d1fc30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efff4d73cf0"/></to>
    </wire>
    <wire loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efff4d6d1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efff4da0020"/></to>
    </wire>
    <wire loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efff4da0020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efff46685f0"/></to>
    </wire>
    <wire loc="63:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efff4d0b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efff4e05b80"/></to>
    </wire>
    <wire loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efff4e05b80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efff4de20f0"/></to>
    </wire>
    <wire loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efff466fa10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efff4652360"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efff4662d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efff466e2a0"/></to>
    </wire>
    <wire loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efff466e2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efff4652bf0"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efff46649b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efff4e05b80"/></to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff464fdd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4658020"/></to>
    </wire>
    <wire loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4658020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff464c440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4656760"/></to>
    </wire>
    <wire loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4656760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff464b760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4655a80"/></to>
    </wire>
    <wire loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4655a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="59:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7efff57af020"/></to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7efff57a5570"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="67:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7efff57adbe0"/></to>
    </wire>
    <wire loc="68:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7efff57a31f0"/></to>
    </wire>
    <wire loc="70:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="71:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7efff57ab0c0"/></to>
    </wire>
    <wire loc="72:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7efff57a2020"/></to>
    </wire>
    <wire loc="74:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="75:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7efff57aa5a0"/></to>
    </wire>
    <wire loc="76:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7efff57a2da0"/></to>
    </wire>
    <wire loc="78:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="79:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7efff57a9a50"/></to>
    </wire>
    <wire loc="80:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7efff57a1b80"/></to>
    </wire>
    <wire loc="82:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></to>
    </wire>
    <wire loc="83:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7efff57a6020"/></to>
    </wire>
    <wire loc="84:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7efff57a0a20"/></to>
    </wire>
    <wire loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efff4ddf540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efff4fb8210"/></to>
    </wire>
    <wire loc="74:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7efff4d6a490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7efff4d19e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efff4c84720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></to>
    </wire>
    <wire loc="66:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efff4c83da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efff534d020"/></to>
    </wire>
    <wire loc="60:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efff45d1a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efff4cde410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efff45d0720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></to>
    </wire>
    <wire loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efff4cde410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efff4c94b00"/></to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efff4c93a40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efff5361370"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efff4c92720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></to>
    </wire>
    <wire loc="57:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efff4c91d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efff5360b40"/></to>
    </wire>
    <wire loc="169:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7efff4c90a90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7efff4c8f2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efff4c7ade0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efff5360b40"/></to>
    </wire>
    <wire loc="56:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efff4c79a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/xthuan/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/xthuan/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/xthuan/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/xthuan/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/xthuan/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/xthuan/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MasterC" loc="4:MasterC.nc">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/xthuan/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/xthuan/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/xthuan/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MasterAppC.USBTimer" loc="44(MasterAppC.USBTimer):/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/xthuan/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.UartSender" loc="47(MasterAppC.UartSender):/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:116">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MasterAppC.UartSender.AMQueueEntryP" loc="43(MasterAppC.UartSender.AMQueueEntryP):/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MasterAppC.UartReceiver" loc="43(MasterAppC.UartReceiver):/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:116">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7efff5793890" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7efff5793c30" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7efff5792020" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7efff57923a0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7efff5792720" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7efff5792a90" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7efff5792e20" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7efff5790200" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7efff57905d0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7efff5755e80" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7efff5752270" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/xthuan/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7efff558e1d0" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7efff558e580" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7efff558e930" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7efff558ece0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7efff558d0d0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efff4fb2460" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efff4fb2460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7efff4f69020" loc="89:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/xthuan/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7efff4f5b0d0" loc="42:/home/xthuan/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7efff4f40800" loc="52:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efff4e353b0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efff4e353b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efff4dfc6d0" loc="55:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efff4dfc6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efff4dfb020" loc="56:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efff4dfb020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efff4dfb410" loc="57:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efff4dfb410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efff4dfbbf0" loc="58:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efff4dfbbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efff4df9020" loc="59:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7efff4df9820" loc="60:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7efff4df9820"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efff4e03ad0" loc="52:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efff4e03ad0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efff4dd82d0" loc="53:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efff4dd82d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efff4dd86c0" loc="54:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efff4dd86c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efff4dd7020" loc="55:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efff4dd7020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efff4dd73f0" loc="56:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff4d984f0" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff4d984f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff4d67d80" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff4d67d80"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7efff4d64110" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff4d141f0" loc="46:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff4d141f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/home/xthuan/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efff4cfedb0" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efff4cf6ad0" loc="43:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7efff4cdb780" loc="45:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efff4c7e250" loc="43:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7efff5842900" loc="58:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5842900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5842c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efff5843440" loc="57:/home/xthuan/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efff5843440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efff58437c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff5845930" loc="42:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff5845930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5845cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7efff583da90" loc="6:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7efff583da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff583de10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff5840b60" loc="4:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff5840b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff583d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7efff583d3b0" loc="5:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efff583d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff583d730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7efff583c1b0" loc="7:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7efff583c1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff583c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff583fd90" loc="2:/home/xthuan/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff583fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5836180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7efff581f020" loc="39:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efff581f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff581f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efff58156c0" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efff58156c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efff581b660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efff5815bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efff5815d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efff581b020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efff5815a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efff581b1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efff581b340"/>
        <function-ref name="initClocks" scoped="" ref="0x7efff581b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff581c020" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff581c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff581c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efff58053d0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efff58053d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efff5804340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efff58058e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efff5805a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efff5805c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efff5805750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efff5805d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efff5804020"/>
        <function-ref name="initClocks" scoped="" ref="0x7efff58041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7efff5804680" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efff5804680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efff5804a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff5806cb0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff5806cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff58050a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7efff57c15a0" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7efff57c15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57c1920"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57c1ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57c1c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57c1dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57c0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57c01b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57c0340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57c04d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57c0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7efff57af020" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7efff57af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57af3a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57af530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57af6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57af850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57af9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57afb70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57afd00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57ae020"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7efff57b8700" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7efff57b8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57b8a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff57b8c10"/>
        <function-ref name="captured" scoped="" ref="0x7efff57b8da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57b7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57b71b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff57b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7efff579ca20" loc="68:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7efff579ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff579b020"/>
        <function-ref name="captured" scoped="" ref="0x7efff579b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff579b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff579b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff579b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7efff57bfaa0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7efff57bfaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57bfe20"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57be020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57be1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57be340"/>
        <function-ref name="fired" scoped="" ref="0x7efff57be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7efff57a2020" loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7efff57a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a23a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a2530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a26c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a2850"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a29e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7efff5799a20" loc="71:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7efff5799a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff5799da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff5798020"/>
        <function-ref name="captured" scoped="" ref="0x7efff57981b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff5798340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57984d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff5798660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7efff57aa5a0" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7efff57aa5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57aa920"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57aaab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57aac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57aadd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57a9020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57a91b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57a9340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57a94d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7efff57c2b10" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7efff57c2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57c9020"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57c91b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57c9340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57c94d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57c9660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57c97f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57c9980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57c9b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57c9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7efff579ea20" loc="66:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7efff579ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff579d020"/>
        <function-ref name="captured" scoped="" ref="0x7efff579d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff579d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff579d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff579d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7efff57a43e0" loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7efff57a43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a4760"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a48f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a4a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a4c10"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7efff57ae5a0" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7efff57ae5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57aea20"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57aebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57aed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57ad020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57ad1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57ad340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57ad4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57ad660"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7efff57b7700" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7efff57b7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57b7a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff57b7c10"/>
        <function-ref name="captured" scoped="" ref="0x7efff57b7da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57b1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57b11b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff57b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7efff579ba20" loc="69:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7efff579ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff579a020"/>
        <function-ref name="captured" scoped="" ref="0x7efff579a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff579a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff579a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff579a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7efff57adbe0" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7efff57adbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57ac020"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57ac1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57ac340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57ac4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57ac660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57ac7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57ac980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57acb10"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57acca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7efff57be890" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7efff57be890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57bec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57beda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57b9020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57b91b0"/>
        <function-ref name="fired" scoped="" ref="0x7efff57b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7efff57d2060" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7efff57d2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff57d23e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff57d2570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57d2700"/>
        <function-ref name="get" scoped="" ref="0x7efff57d2890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57d2a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57d2bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff57d2d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57d1020"/>
        <function-ref name="overflow" scoped="" ref="0x7efff57d11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff57d1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff57d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7efff57a2da0" loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7efff57a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a1180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a1310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a14a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a1630"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7efff57c80c0" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7efff57c80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57c8440"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57c85d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57c8760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57c88f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57c8a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57c8c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57c8da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57c1020"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7efff57a9a50" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7efff57a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57a9dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57a7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57a71b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57a7340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57a74d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57a7660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57a77f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57a7980"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57a7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7efff57b26d0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7efff57b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57b2a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff57b2be0"/>
        <function-ref name="captured" scoped="" ref="0x7efff57b2d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57b8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57b81b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff57b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7efff579da20" loc="67:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7efff579da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff579c020"/>
        <function-ref name="captured" scoped="" ref="0x7efff579c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff579c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff579c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff579c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7efff57bacf0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7efff57bacf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57bf0a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57bf230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57bf3c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57bf550"/>
        <function-ref name="fired" scoped="" ref="0x7efff57bf6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7efff57a31f0" loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7efff57a31f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a3570"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a3700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a3890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a3a20"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7efff579aa20" loc="70:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7efff579aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff5799020"/>
        <function-ref name="captured" scoped="" ref="0x7efff57991b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff5799340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57994d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff5799660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7efff57ab0c0" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7efff57ab0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57ab440"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57ab5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57ab760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57ab8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57aba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57abc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57abda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57aa020"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7efff57b16c0" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7efff57b16c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff57b1a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff57b1bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57b1d60"/>
        <function-ref name="get" scoped="" ref="0x7efff57b0020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57b01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57b0340"/>
        <function-ref name="getMode" scoped="" ref="0x7efff57b04d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57b0660"/>
        <function-ref name="overflow" scoped="" ref="0x7efff57b07f0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff57b0980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff57b0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7efff57a1b80" loc="63:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7efff57a1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a0020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a01b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a0340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a04d0"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7efff579fa20" loc="65:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7efff579fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff579e020"/>
        <function-ref name="captured" scoped="" ref="0x7efff579e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff579e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff579e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff579e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7efff57a0a20" loc="64:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7efff57a0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff579f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff579f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff579f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff579f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7efff579f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7efff57a5570" loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7efff57a5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57a58f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff57a5a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff57a5c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff57a5da0"/>
        <function-ref name="fired" scoped="" ref="0x7efff57a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7efff57a6020" loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7efff57a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57a63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff57a6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57a66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff57a6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57a69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57a6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff57a6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff57a5020"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efff575faa0" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efff575faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff575fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efff575f450" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efff575f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff575f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efff575e120" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efff575e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff575e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efff5760d80" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff5760d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff575f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efff5761540" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff5761540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff57618c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff5761a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff5761be0"/>
        <function-ref name="get" scoped="" ref="0x7efff5761d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff5760020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57601b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff5760340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57604d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff5760660"/>
        <function-ref name="setMode" scoped="" ref="0x7efff57607f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff5760980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efff5757940" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efff5757940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff5757cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efff57572f0" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efff57572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff5757670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efff5756020" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efff5756020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff57563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efff5758bf0" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff5758bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff5757020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efff57593e0" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff57593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff5759760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff57598f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff5759a80"/>
        <function-ref name="get" scoped="" ref="0x7efff5759c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff5759da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff5758020"/>
        <function-ref name="getMode" scoped="" ref="0x7efff57581b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff5758340"/>
        <function-ref name="overflow" scoped="" ref="0x7efff57584d0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff5758660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff57587f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff570ba90" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff570ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff570be10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff570a020"/>
        <function-ref name="captured" scoped="" ref="0x7efff570a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff570a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff570a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff570a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff57539d0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff57539d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff5753d50"/>
        <function-ref name="getControl" scoped="" ref="0x7efff570c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff570c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff570c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff570c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff570c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff570c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff570c980"/>
        <function-ref name="setControl" scoped="" ref="0x7efff570cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff5708020" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff5708020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff57083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff570cde0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff570cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff570b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff570b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff570b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff570b630"/>
        <function-ref name="fired" scoped="" ref="0x7efff570b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff570a930" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff570a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff570acb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff570ae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff5709020"/>
        <function-ref name="get" scoped="" ref="0x7efff57091b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff5709340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff57094d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff5709660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff57097f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff5709980"/>
        <function-ref name="setMode" scoped="" ref="0x7efff5709b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff5709ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff5703160" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff5703160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff57034e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff5703670"/>
        <function-ref name="captured" scoped="" ref="0x7efff5703800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff5703990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff5703b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff5703cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff5705020" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff5705020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff57053a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff5705530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57056c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff5705850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff57059e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff5705b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff5705d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff5704020"/>
        <function-ref name="setControl" scoped="" ref="0x7efff57041b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff57017a0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff57017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff5701b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff5704480" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff5704480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff5704800"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff5704990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff5704b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff5704cb0"/>
        <function-ref name="fired" scoped="" ref="0x7efff5704e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff5702020" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff5702020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff57023a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff5702530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff57026c0"/>
        <function-ref name="get" scoped="" ref="0x7efff5702850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff57029e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff5702b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efff5702d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff5701020"/>
        <function-ref name="overflow" scoped="" ref="0x7efff57011b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff5701340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff57014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56fb7a0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56fb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56fbb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56fbcb0"/>
        <function-ref name="captured" scoped="" ref="0x7efff56fbe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56fa020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56fa1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56fd6d0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56fda50"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56fdbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56fdd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56fc020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56fc1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56fc340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56fc4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56fc660"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56f9c50" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56f9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56fcac0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56fcac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56fce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56fb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56fb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56fb340"/>
        <function-ref name="fired" scoped="" ref="0x7efff56fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56fa610" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56fa610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56fa990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56fab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56facb0"/>
        <function-ref name="get" scoped="" ref="0x7efff56fae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56f9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56f91b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56f9340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56f94d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56f9660"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56f97f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56f4cb0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56f4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56f30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56f3230"/>
        <function-ref name="captured" scoped="" ref="0x7efff56f33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56f3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56f36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56f3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56f6b30" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56f6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56f5020"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56f51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56f5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56f54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56f5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56f57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56f5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56f5b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56f5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56f12f0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56f1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56f4020" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56f43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56f4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56f46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56f4850"/>
        <function-ref name="fired" scoped="" ref="0x7efff56f49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56f3b40" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56f3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56f2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56f21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56f2340"/>
        <function-ref name="get" scoped="" ref="0x7efff56f24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56f2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56f27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56f2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56f2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56f2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56f2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56eb2f0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56eb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56eb670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56eb800"/>
        <function-ref name="captured" scoped="" ref="0x7efff56eb990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56ebb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56ebcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56ebe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56ed220" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56ed220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56ed5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56ed730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56ed8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56eda50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56edbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56edd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56ec020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56ec1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56ec340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56e97a0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56e97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56e9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56ec610" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56ec610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56ec990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56ecb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56eccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56ece40"/>
        <function-ref name="fired" scoped="" ref="0x7efff56eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56ea160" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56ea160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56ea4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56ea670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56ea800"/>
        <function-ref name="get" scoped="" ref="0x7efff56ea990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56eab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56eacb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56eae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56e9020"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56e91b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56e9340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56e94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56e47a0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56e47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56e4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56e4cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efff56e4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56e3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56e31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56e66d0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56e66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56e6a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56e6be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56e6d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56e5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56e51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56e5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56e54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56e5660"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56e2c50" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56e2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56e5ac0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56e5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56e5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56e4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56e41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56e4340"/>
        <function-ref name="fired" scoped="" ref="0x7efff56e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56e3610" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56e3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56e3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56e3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56e3cb0"/>
        <function-ref name="get" scoped="" ref="0x7efff56e3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56e2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56e21b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56e2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56e24d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56e2660"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56e27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56dccb0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56db0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56db230"/>
        <function-ref name="captured" scoped="" ref="0x7efff56db3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56db550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56db6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56db870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56dfb30" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56dfb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56dd020"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56dd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56dd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56dd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56dd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56dd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56dd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56ddb10"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56ddca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56d92f0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56d9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56dc020" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56dc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56dc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56dc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56dc850"/>
        <function-ref name="fired" scoped="" ref="0x7efff56dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56dbb40" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56dbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56da020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56da1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56da340"/>
        <function-ref name="get" scoped="" ref="0x7efff56da4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56da660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56da7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56da980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56dab10"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56daca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56dae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56d42f0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56d42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56d4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56d4800"/>
        <function-ref name="captured" scoped="" ref="0x7efff56d4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56d4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56d4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56d4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56d6220" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56d6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56d65a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56d6730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56d68c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56d6a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56d6be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56d6d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56d5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56d51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56d5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56d27a0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56d27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56d2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56d5610" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56d5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56d5990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56d5b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56d5cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56d5e40"/>
        <function-ref name="fired" scoped="" ref="0x7efff56d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56d3160" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56d3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56d34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56d3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56d3800"/>
        <function-ref name="get" scoped="" ref="0x7efff56d3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56d3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56d3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56d3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56d2020"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56d21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56d2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56d24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56cc7a0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56ccb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56cccb0"/>
        <function-ref name="captured" scoped="" ref="0x7efff56cce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56cb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56cb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56cf6d0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56cfa50"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56cfbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56cfd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56cd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56cd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56cd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56cd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56cd660"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56cac50" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56cac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56cdac0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56cdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56cde40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56cc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56cc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56cc340"/>
        <function-ref name="fired" scoped="" ref="0x7efff56cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56cb610" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56cb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56cb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56cbb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56cbcb0"/>
        <function-ref name="get" scoped="" ref="0x7efff56cbe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56ca020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56ca1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56ca4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56ca660"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56ca7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56ca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efff56c5cb0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efff56c5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56c40a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efff56c4230"/>
        <function-ref name="captured" scoped="" ref="0x7efff56c43c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56c4550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56c46e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efff56c4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efff56c7b30" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efff56c7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff56c6020"/>
        <function-ref name="getControl" scoped="" ref="0x7efff56c61b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56c6340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff56c64d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff56c6660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56c67f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff56c6980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff56c6b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efff56c6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efff56c22f0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efff56c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56c2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efff56c5020" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efff56c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff56c53a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff56c5530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff56c56c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff56c5850"/>
        <function-ref name="fired" scoped="" ref="0x7efff56c59e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efff56c4b40" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff56c4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff56c3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff56c31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff56c3340"/>
        <function-ref name="get" scoped="" ref="0x7efff56c34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff56c3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff56c37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff56c3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff56c3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efff56c3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff56c3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff56c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7efff56bb240" loc="7:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7efff56bb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56bb5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7efff56c0aa0" loc="4:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7efff56c0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56c0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7efff56bd260" loc="5:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7efff56bd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56bd5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7efff56bd9f0" loc="6:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7efff56bd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff56bdd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efff595e4c0" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efff595e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efff595e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7efff5c723b0" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efff5c723b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efff5c72730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efff5c728c0"/>
        <function-ref name="sleep" scoped="" ref="0x7efff5c72a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7efff5a9abe0" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7efff5a9abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efff5bd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7efff581db50" loc="39:/home/xthuan/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efff581db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efff5684b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efff56841b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efff5684340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efff56844d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efff5684020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efff5684660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efff56847f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7efff5684980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efff5678dc0" loc="60:/home/xthuan/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efff5678dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5677180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efff5679590" loc="57:/home/xthuan/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efff5679590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efff5679910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7efff56786c0" loc="59:/home/xthuan/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7efff56786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5678a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7efff5679c00" loc="58:/home/xthuan/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efff5679c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5678020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efff56781b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efff5678340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efff5d4a4f0" loc="48:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efff5d4a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff5d4a870"/>
        <function-ref name="runTask" scoped="" ref="0x7efff5d4aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efff5cdb3a0" loc="47:/home/xthuan/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efff5cdb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5cdb720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efff5cdb8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efff5cdba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efff5884040" loc="56:/home/xthuan/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efff5884040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff58843c0"/>
        <function-ref name="runTask" scoped="" ref="0x7efff5884550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7efff5880490" loc="57:/home/xthuan/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efff5880490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efff5880810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efff58809a0"/>
        <function-ref name="sleep" scoped="" ref="0x7efff5880b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efff5886140" loc="55:/home/xthuan/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efff5886140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff58864c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efff5886650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efff58867e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efff56610d0" loc="46:/home/xthuan/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff56610d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff5661450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff56615e0"/>
        <function-ref name="led1On" scoped="" ref="0x7efff5661770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff5661900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff5661a90"/>
        <function-ref name="get" scoped="" ref="0x7efff5661c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff5661db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff566c4d0"/>
        <function-ref name="set" scoped="" ref="0x7efff566c020"/>
        <function-ref name="led0On" scoped="" ref="0x7efff566c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efff566c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7efff565c060" loc="50:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efff565c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff565c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff565c570"/>
        <function-ref name="toggle" scoped="" ref="0x7efff565c700"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff565c890"/>
        <function-ref name="get" scoped="" ref="0x7efff565ca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff565cbb0"/>
        <function-ref name="set" scoped="" ref="0x7efff565cd40"/>
        <function-ref name="clr" scoped="" ref="0x7efff565b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff565f470" loc="46:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff565f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff565f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7efff565b340" loc="51:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efff565b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff565b6c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff565b850"/>
        <function-ref name="toggle" scoped="" ref="0x7efff565b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff565bb70"/>
        <function-ref name="get" scoped="" ref="0x7efff565bd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5656020"/>
        <function-ref name="set" scoped="" ref="0x7efff56561b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5656340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efff565fa70" loc="47:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff565fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff565fdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff565e020"/>
        <function-ref name="led1On" scoped="" ref="0x7efff565e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff565e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff565e4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff565e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff565e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff565ee30"/>
        <function-ref name="set" scoped="" ref="0x7efff565e980"/>
        <function-ref name="led0On" scoped="" ref="0x7efff565eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7efff565eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7efff5656660" loc="52:/home/xthuan/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efff5656660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff56569e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5656b70"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5656d00"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5655020"/>
        <function-ref name="get" scoped="" ref="0x7efff56551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5655340"/>
        <function-ref name="set" scoped="" ref="0x7efff56554d0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5655660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7efff5660af0" loc="41:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efff5660af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5660e70"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5639030"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56391c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5639350"/>
        <function-ref name="get" scoped="" ref="0x7efff56394e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5639670"/>
        <function-ref name="set" scoped="" ref="0x7efff5639800"/>
        <function-ref name="clr" scoped="" ref="0x7efff5639990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7efff5639cf0" loc="42:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efff5639cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff56380a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5638230"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56383c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5638550"/>
        <function-ref name="get" scoped="" ref="0x7efff56386e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5638870"/>
        <function-ref name="set" scoped="" ref="0x7efff5638a00"/>
        <function-ref name="clr" scoped="" ref="0x7efff5638b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7efff56362e0" loc="44:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff56362e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff5636660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7efff5637020" loc="43:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efff5637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff56373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5637530"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5637850"/>
        <function-ref name="get" scoped="" ref="0x7efff56379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5637b70"/>
        <function-ref name="set" scoped="" ref="0x7efff5637d00"/>
        <function-ref name="clr" scoped="" ref="0x7efff5636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efff5621810" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efff5621810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5621b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5621d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5620020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5620340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5620660"/>
        <function-ref name="get" scoped="" ref="0x7efff56207f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5620980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5620b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5620ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5620e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff561f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff561f2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff561f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efff560c810" loc="66:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efff560c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff560cb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff560cd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff560b020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff560b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff560b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff560b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff560b660"/>
        <function-ref name="get" scoped="" ref="0x7efff560b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff560b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff560bb10"/>
        <function-ref name="set" scoped="" ref="0x7efff560bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff560be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff560a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff560a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff560a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7efff55c3ca0" loc="145:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7efff55c3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55c20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55c2230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55c23c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55c2550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55c26e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55c2870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55c2a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55c2b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55c2d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55c1020"/>
        <function-ref name="set" scoped="" ref="0x7efff55c11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55c1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55c14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55c1760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55c18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7efff559ecb0" loc="165:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7efff559ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff559d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff559d230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff559d3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff559d550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff559d6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff559d870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff559da00"/>
        <function-ref name="get" scoped="" ref="0x7efff559db90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff559dd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff559c020"/>
        <function-ref name="set" scoped="" ref="0x7efff559c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff559c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff559c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff559c760"/>
        <function-ref name="clr" scoped="" ref="0x7efff559c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7efff55c1cc0" loc="146:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7efff55c1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55c00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55c0230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55c03c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55c0550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55c06e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55c0870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55c0a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55c0b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55c0d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55bf020"/>
        <function-ref name="set" scoped="" ref="0x7efff55bf1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55bf340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55bf4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55bf760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7efff5608810" loc="71:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7efff5608810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5608b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5608d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5607020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5607340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5607660"/>
        <function-ref name="get" scoped="" ref="0x7efff56077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5607980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5607b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5607ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5607e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5606020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56062b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5606440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7efff55f49a0" loc="84:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7efff55f49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55f4d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55f3020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55f34d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55f37f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55f3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55f3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55f3ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55f3e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55f2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55f2440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55f25d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7efff55df9a0" loc="97:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7efff55df9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55dfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55de020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55de1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55de340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55de4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55de660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55de7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55de980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55deb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55deca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55dee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55dd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55dd440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55dd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7efff55cf9a0" loc="108:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7efff55cf9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55cfd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ce020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ce1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ce340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ce4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ce660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ce7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55ce980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55ceb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ceca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55cee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55cd020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55cd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55cd440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55cd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7efff55bbcc0" loc="149:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7efff55bbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ba230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ba3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ba550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ba6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ba870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55baa00"/>
        <function-ref name="get" scoped="" ref="0x7efff55bab90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55bad20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55b9020"/>
        <function-ref name="set" scoped="" ref="0x7efff55b91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55b9340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55b94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55b9760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55b98f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7efff55aacb0" loc="159:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7efff55aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55a9230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55a93c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55a9550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55a96e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55a9870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55a9a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55a9b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55a9d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55a8020"/>
        <function-ref name="set" scoped="" ref="0x7efff55a81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55a8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55a84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55a8760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55a88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7efff5596cc0" loc="171:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7efff5596cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55950a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5595230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55953c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5595550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55956e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5595870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5595a00"/>
        <function-ref name="get" scoped="" ref="0x7efff5595b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5595d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5594020"/>
        <function-ref name="set" scoped="" ref="0x7efff55941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5594340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5594760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55948f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efff561b810" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efff561b810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff561bb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff561bd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff561a020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff561a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff561a340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff561a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff561a660"/>
        <function-ref name="get" scoped="" ref="0x7efff561a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff561a980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff561ab10"/>
        <function-ref name="set" scoped="" ref="0x7efff561aca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff561ae30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5619020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56192b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5619440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7efff55b9cc0" loc="150:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7efff55b9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55b80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55b8230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55b83c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55b8550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55b86e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55b8870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55b8a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55b8b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55b8d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55b7020"/>
        <function-ref name="set" scoped="" ref="0x7efff55b71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55b7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55b74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55b7760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55b78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efff5617810" loc="61:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efff5617810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5617b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5617d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5616020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5616340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5616660"/>
        <function-ref name="get" scoped="" ref="0x7efff56167f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5616980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5616b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5616ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5616e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5615020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56152b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5615440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7efff5602810" loc="74:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7efff5602810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5602b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5602d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5601020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56011b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5601340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56014d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5601660"/>
        <function-ref name="get" scoped="" ref="0x7efff56017f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5601980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5601b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5601ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5601e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5600020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56002b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5600440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7efff55ee9a0" loc="87:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7efff55ee9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55eed20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ed020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ed4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ed7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55ed980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55edb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55edca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55ede30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ec020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55ec1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55ec440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55ec5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7efff55d99a0" loc="100:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7efff55d99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55d9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55d8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55d81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55d8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55d84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55d8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55d87f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55d8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55d8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55d8ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55d8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55d7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55d71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55d7440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55d75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7efff55c99a0" loc="111:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7efff55c99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55c9d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55c8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55c81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55c8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55c84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55c87f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55c8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55c8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55c8ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55c8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55c7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55c71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55c7440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55c75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efff5625810" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efff5625810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5625b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5625d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5624020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5624340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5624660"/>
        <function-ref name="get" scoped="" ref="0x7efff56247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5624980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5624b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5624ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5624e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5623020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56232b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5623440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efff5610810" loc="64:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efff5610810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5610c90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5610e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff560f020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff560f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff560f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff560f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff560f660"/>
        <function-ref name="get" scoped="" ref="0x7efff560f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff560f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff560fb10"/>
        <function-ref name="set" scoped="" ref="0x7efff560fca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff560fe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff560e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff560e2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff560e440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7efff55fc810" loc="77:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7efff55fc810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55fcb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55fcd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55fb340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55fb660"/>
        <function-ref name="get" scoped="" ref="0x7efff55fb7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55fb980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55fbb10"/>
        <function-ref name="set" scoped="" ref="0x7efff55fbca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55fbe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55fa020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55fa2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff55fa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7efff55c5cc0" loc="144:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7efff55c5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55c4230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55c43c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55c4550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55c46e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55c4870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55c4a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55c4b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55c4d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55c3020"/>
        <function-ref name="set" scoped="" ref="0x7efff55c31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55c3340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55c34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55c3760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55c38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7efff55a4cb0" loc="162:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7efff55a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55a3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55a33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55a3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55a36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55a3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55a3a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55a3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55a3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55a2020"/>
        <function-ref name="set" scoped="" ref="0x7efff55a21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55a2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55a24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55a2760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55a28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7efff5598cb0" loc="169:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7efff5598cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5597230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55973c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5597550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55976e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5597870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5597a00"/>
        <function-ref name="get" scoped="" ref="0x7efff5597b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5597d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5596020"/>
        <function-ref name="set" scoped="" ref="0x7efff55961b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5596340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55964d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5596760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7efff55b0cc0" loc="155:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7efff55b0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55af230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55af3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55af550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55af6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55af870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55afa00"/>
        <function-ref name="get" scoped="" ref="0x7efff55afb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55afd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ae020"/>
        <function-ref name="set" scoped="" ref="0x7efff55ae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55ae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55ae760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55ae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7efff55f8810" loc="82:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7efff55f8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55f8d90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55f7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55f71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55f7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55f74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55f7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55f77f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55f7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55f7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55f7ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55f7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55f6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55f61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55f6440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55f65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7efff55e39a0" loc="95:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7efff55e39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55e3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55e2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55e21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55e2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55e24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55e2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55e27f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55e2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55e2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55e2ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55e2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55e1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55e11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55e1440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55e15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7efff55d39a0" loc="106:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7efff55d39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55d3d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55d2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55d21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55d2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55d24d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55d2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55d27f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55d2980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55d2b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55d2ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55d2e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55d1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55d11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55d1440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55d15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7efff55a2cb0" loc="163:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7efff55a2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55a1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55a13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55a1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55a16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55a1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55a1a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55a1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55a1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55a0020"/>
        <function-ref name="set" scoped="" ref="0x7efff55a01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55a0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55a04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55a0760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55a08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7efff55b7cb0" loc="152:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7efff55b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55b5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55b53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55b5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55b56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55b5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55b5a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55b5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55b5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55b4020"/>
        <function-ref name="set" scoped="" ref="0x7efff55b41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55b4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55b44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55b4760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55b48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efff561f810" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efff561f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff561fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff561fd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff561e020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff561e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff561e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff561e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff561e660"/>
        <function-ref name="get" scoped="" ref="0x7efff561e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff561e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff561eb10"/>
        <function-ref name="set" scoped="" ref="0x7efff561eca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff561ee30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff561d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff561d2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff561d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efff560a810" loc="67:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efff560a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff560ab90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff560ad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5609020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5609340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5609660"/>
        <function-ref name="get" scoped="" ref="0x7efff56097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5609980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5609b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5609ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5609e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5608020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56082b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5608440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7efff55d79a0" loc="104:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7efff55d79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55d7d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55d6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55d61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55d6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55d64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55d67f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55d6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55d6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55d6ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55d6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55d5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55d51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55d5440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55d55d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7efff5606810" loc="72:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7efff5606810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5606b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5606d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5605020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56051b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5605340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5605660"/>
        <function-ref name="get" scoped="" ref="0x7efff56057f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5605980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5605b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5605ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5605e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5604020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56042b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5604440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7efff55f29a0" loc="85:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7efff55f29a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55f2d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55f1020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55f11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55f1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55f17f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55f1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55f1b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55f1ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55f1e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55f0020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55f01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55f0440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55f05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7efff55dd9a0" loc="98:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7efff55dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ddd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55dc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55dc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55dc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55dc7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55dc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55dcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55dcca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55dce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55db020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55db1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55db440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55db5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7efff55cd9a0" loc="109:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7efff55cd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55cdd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55cc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55cc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55cc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55cc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55cc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55cc7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55cc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55ccb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ccca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55cce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55cb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55cb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55cb440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55cb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7efff55b2cc0" loc="154:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7efff55b2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55b1230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55b13c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55b1550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55b16e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55b1870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55b1a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55b1b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55b1d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55b0020"/>
        <function-ref name="set" scoped="" ref="0x7efff55b01b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55b0340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55b04d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55b0760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55b08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efff5627870" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efff5627870"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5627bf0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5627d80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5632020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5632340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5632660"/>
        <function-ref name="get" scoped="" ref="0x7efff56327f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5632980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5632b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5632ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5632e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5631020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56312b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5631440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efff5615810" loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efff5615810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5615b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5615d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5613020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5613340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5613660"/>
        <function-ref name="get" scoped="" ref="0x7efff56137f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5613980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5613b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5613ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5613e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5612020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56122b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5612440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7efff5600810" loc="75:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7efff5600810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5600b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5600d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ff340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ff660"/>
        <function-ref name="get" scoped="" ref="0x7efff55ff7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55ff980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ffb10"/>
        <function-ref name="set" scoped="" ref="0x7efff55ffca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ffe30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55fe020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55fe2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff55fe440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7efff55ec9a0" loc="88:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7efff55ec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ecd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55eb020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55eb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55eb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55eb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55eb660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55eb7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55eb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55ebb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ebca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55ebe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ea020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55ea1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55ea440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55ea5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7efff55aecc0" loc="156:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7efff55aecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ad230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ad3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ad550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ad6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ad870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ada00"/>
        <function-ref name="get" scoped="" ref="0x7efff55adb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55add20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55ac020"/>
        <function-ref name="set" scoped="" ref="0x7efff55ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55ac760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7efff55a8cb0" loc="160:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7efff55a8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55a7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55a73c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55a7550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55a76e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55a7870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55a7a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55a7b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55a7d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55a6020"/>
        <function-ref name="set" scoped="" ref="0x7efff55a61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55a6340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55a64d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55a6760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7efff559ccb0" loc="166:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7efff559ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff559b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff559b230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff559b3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff559b550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff559b6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff559b870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff559ba00"/>
        <function-ref name="get" scoped="" ref="0x7efff559bb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff559bd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff559a020"/>
        <function-ref name="set" scoped="" ref="0x7efff559a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff559a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff559a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff559a760"/>
        <function-ref name="clr" scoped="" ref="0x7efff559a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7efff55e89a0" loc="93:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7efff55e89a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55e8d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55e7020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55e71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55e7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55e74d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55e7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55e77f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55e7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55e7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55e7ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55e7e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55e6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55e61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55e6440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55e65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7efff55accc0" loc="157:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7efff55accc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ab230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ab3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ab550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ab6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ab870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55aba00"/>
        <function-ref name="get" scoped="" ref="0x7efff55abb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55abd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55aa020"/>
        <function-ref name="set" scoped="" ref="0x7efff55aa1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55aa340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55aa4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55aa760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55aa8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efff5623810" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efff5623810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5623b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5623d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5622020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5622340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5622660"/>
        <function-ref name="get" scoped="" ref="0x7efff56227f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5622980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5622b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5622ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5622e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5621020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56212b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5621440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efff560e810" loc="65:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efff560e810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff560eb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff560ed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff560d020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff560d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff560d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff560d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff560d660"/>
        <function-ref name="get" scoped="" ref="0x7efff560d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff560d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff560db10"/>
        <function-ref name="set" scoped="" ref="0x7efff560dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff560de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff560c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff560c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff560c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7efff55fa810" loc="78:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7efff55fa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55fab90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55fad20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55f9340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55f9660"/>
        <function-ref name="get" scoped="" ref="0x7efff55f97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55f9980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55f9b10"/>
        <function-ref name="set" scoped="" ref="0x7efff55f9ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55f9e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55f8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55f82b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff55f8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7efff55b4cc0" loc="153:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7efff55b4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55b3230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55b33c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55b3550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55b36e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55b3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55b3a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55b3b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55b3d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55b2020"/>
        <function-ref name="set" scoped="" ref="0x7efff55b21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55b2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55b24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55b2760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55b28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7efff55a0cb0" loc="164:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7efff55a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff559f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff559f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff559f3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff559f550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff559f6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff559f870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff559fa00"/>
        <function-ref name="get" scoped="" ref="0x7efff559fb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff559fd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff559e020"/>
        <function-ref name="set" scoped="" ref="0x7efff559e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff559e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff559e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff559e760"/>
        <function-ref name="clr" scoped="" ref="0x7efff559e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7efff55f69a0" loc="83:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7efff55f69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55f6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55f5020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55f51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55f5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55f54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55f5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55f57f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55f5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55f5b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55f5ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55f5e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55f4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55f41b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55f4440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55f45d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7efff55e19a0" loc="96:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7efff55e19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55e1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55e0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55e01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55e0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55e04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55e0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55e07f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55e0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55e0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55e0ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55e0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55df020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55df1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55df440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55df5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7efff55d19a0" loc="107:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7efff55d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55d1d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55d0020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55d0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55d04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55d0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55d07f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55d0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55d0b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55d0ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55d0e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55cf020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55cf1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55cf440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55cf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efff561d810" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efff561d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff561db90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff561dd20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff561c020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff561c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff561c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff561c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff561c660"/>
        <function-ref name="get" scoped="" ref="0x7efff561c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff561c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff561cb10"/>
        <function-ref name="set" scoped="" ref="0x7efff561cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff561ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff561b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff561b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff561b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7efff55d59a0" loc="105:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7efff55d59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55d5d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55d4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55d41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55d44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55d4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55d47f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55d4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55d4ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55d4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55d3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55d31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55d3440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55d35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efff5619810" loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efff5619810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5619b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5619d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5618020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5618340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5618660"/>
        <function-ref name="get" scoped="" ref="0x7efff56187f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5618980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5618b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5618ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5618e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5617020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56172b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5617440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7efff5604810" loc="73:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7efff5604810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5604b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5604d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5603020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56031b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5603340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56034d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5603660"/>
        <function-ref name="get" scoped="" ref="0x7efff56037f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5603980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5603b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5603ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5603e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5602020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56022b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5602440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7efff55f09a0" loc="86:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7efff55f09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55f0d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55efca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55ee440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7efff55db9a0" loc="99:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7efff55db9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55dbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55da020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55da1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55da340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55da4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55da660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55da7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55da980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55dab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55daca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55dae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55d9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55d91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55d9440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55d95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7efff55cb9a0" loc="110:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7efff55cb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55cbd20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55ca020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55ca1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55ca340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55ca4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55ca660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55ca7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55ca980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55cab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55caca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55cae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55c9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55c91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55c9440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55c95d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efff5631810" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efff5631810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5631b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5631d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5626020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5626340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5626660"/>
        <function-ref name="get" scoped="" ref="0x7efff56267f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5626980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5626b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5626ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5626e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5625020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56252b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5625440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efff5612810" loc="63:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efff5612810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5612b90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5612d20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5611020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff56111b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5611340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff56114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5611660"/>
        <function-ref name="get" scoped="" ref="0x7efff56117f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5611980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5611b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5611ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5611e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5610020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff56102b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5610440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7efff55fe810" loc="76:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7efff55fe810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55feb90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55fed20"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55fd020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55fd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55fd340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55fd660"/>
        <function-ref name="get" scoped="" ref="0x7efff55fd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55fd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55fdb10"/>
        <function-ref name="set" scoped="" ref="0x7efff55fdca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55fde30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55fc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55fc2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff55fc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7efff55ea9a0" loc="89:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7efff55ea9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55ead20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55e9020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55e91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55e9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55e94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55e9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55e97f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55e9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55e9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55e9ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55e9e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55e8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55e81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55e8440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55e85d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7efff55bdca0" loc="148:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7efff55bdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55bc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55bc230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55bc3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55bc550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55bc6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55bc870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55bca00"/>
        <function-ref name="get" scoped="" ref="0x7efff55bcb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55bcd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55bb020"/>
        <function-ref name="set" scoped="" ref="0x7efff55bb1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55bb340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55bb4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55bb760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55bb8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7efff55a6cb0" loc="161:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7efff55a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55a5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55a53c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55a5550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55a56e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55a5870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55a5a00"/>
        <function-ref name="get" scoped="" ref="0x7efff55a5b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55a5d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55a4020"/>
        <function-ref name="set" scoped="" ref="0x7efff55a41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55a4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55a44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55a4760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7efff55bfcc0" loc="147:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7efff55bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55be230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55be3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55be550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55be6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55be870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55bea00"/>
        <function-ref name="get" scoped="" ref="0x7efff55beb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55bed20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55bd020"/>
        <function-ref name="set" scoped="" ref="0x7efff55bd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55bd340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55bd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55bd760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7efff55e69a0" loc="94:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7efff55e69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55e6d20"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55e4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55e41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55e4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55e44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55e4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55e47f0"/>
        <function-ref name="get" scoped="" ref="0x7efff55e4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55e4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55e4ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff55e4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55e3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55e31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55e3440"/>
        <function-ref name="clr" scoped="" ref="0x7efff55e35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7efff559acb0" loc="168:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7efff559acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5599230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55993c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5599550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55996e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5599870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5599a00"/>
        <function-ref name="get" scoped="" ref="0x7efff5599b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5599d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5598020"/>
        <function-ref name="set" scoped="" ref="0x7efff55981b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5598340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55984d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5598760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55988f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7efff5594cc0" loc="172:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7efff5594cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5593230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55933c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5593550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55936e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5593870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5593a00"/>
        <function-ref name="get" scoped="" ref="0x7efff5593b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5593d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5592020"/>
        <function-ref name="set" scoped="" ref="0x7efff55921b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5592340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55924d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5592760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55928f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7efff55c79f0" loc="143:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7efff55c79f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55c61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff55c6350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55c64e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff55c6670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55c6800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55c6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55c6b20"/>
        <function-ref name="get" scoped="" ref="0x7efff55c6cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55c6e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff55c5020"/>
        <function-ref name="set" scoped="" ref="0x7efff55c51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff55c5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55c54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff55c5760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55c58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff558fd10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff558fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55680e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5568270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5568400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5568590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5568720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55688b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5568a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5568bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5568d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5567020"/>
        <function-ref name="set" scoped="" ref="0x7efff55671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5567340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5567760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5563740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5563740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5563ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5563c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5563de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5562020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55621b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5562340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55624d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5562660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55627f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5562980"/>
        <function-ref name="set" scoped="" ref="0x7efff5562b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5562ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5562e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5561120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff555e100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff555e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff555e480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff555e610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff555e7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff555e930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff555eac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff555ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff555ede0"/>
        <function-ref name="get" scoped="" ref="0x7efff555d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff555d1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff555d340"/>
        <function-ref name="set" scoped="" ref="0x7efff555d4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff555d660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff555d7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff555da80"/>
        <function-ref name="clr" scoped="" ref="0x7efff555dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff555ad10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff555ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55590e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5559270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5559400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5559590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5559720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55598b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5559a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5559bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5559d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5558020"/>
        <function-ref name="set" scoped="" ref="0x7efff55581b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5558340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55584d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5558760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5555740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5555740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5555ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5555c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5555de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5554020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55541b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5554340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55544d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5554660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55547f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5554980"/>
        <function-ref name="set" scoped="" ref="0x7efff5554b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5554ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5554e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5553120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5550100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5550100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5550480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5550610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55507a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5550930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5550ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5550c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5550de0"/>
        <function-ref name="get" scoped="" ref="0x7efff554f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff554f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff554f340"/>
        <function-ref name="set" scoped="" ref="0x7efff554f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff554f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff554f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff554fa80"/>
        <function-ref name="clr" scoped="" ref="0x7efff554fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff554cd10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff554cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff554b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff554b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff554b400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff554b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff554b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff554b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff554ba40"/>
        <function-ref name="get" scoped="" ref="0x7efff554bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff554bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff554a020"/>
        <function-ref name="set" scoped="" ref="0x7efff554a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff554a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff554a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff554a760"/>
        <function-ref name="clr" scoped="" ref="0x7efff554a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5547740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5547740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5547ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5547c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5547de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5546020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5546340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55464d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5546660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55467f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5546980"/>
        <function-ref name="set" scoped="" ref="0x7efff5546b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5546ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5546e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5545120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5542100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5542100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5542480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5542610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55427a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5542930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5542ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5542c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5542de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5540020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5540340"/>
        <function-ref name="set" scoped="" ref="0x7efff55404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5540660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5540a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5540c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff553dd10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff553dd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff553c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff553c270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff553c400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff553c590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff553c720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff553c8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff553ca40"/>
        <function-ref name="get" scoped="" ref="0x7efff553cbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff553cd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff553b020"/>
        <function-ref name="set" scoped="" ref="0x7efff553b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff553b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff553b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff553b760"/>
        <function-ref name="clr" scoped="" ref="0x7efff553b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5538740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5538740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5538ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5538c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5538de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5537020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55371b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5537340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55374d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5537660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55377f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5537980"/>
        <function-ref name="set" scoped="" ref="0x7efff5537b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5537ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5537e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5536120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55362b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5533100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5533100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5533480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5533610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55337a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5533930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5533ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5533c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5533de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5532020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55321b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5532340"/>
        <function-ref name="set" scoped="" ref="0x7efff55324d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5532660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55327f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5532a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5532c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff552fd80" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff552fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff552e180"/>
        <function-ref name="isInput" scoped="" ref="0x7efff552e310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff552e4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff552e630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff552e7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff552e950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff552eae0"/>
        <function-ref name="get" scoped="" ref="0x7efff552ec70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff552ee00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff552d020"/>
        <function-ref name="set" scoped="" ref="0x7efff552d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff552d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff552d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff552d760"/>
        <function-ref name="clr" scoped="" ref="0x7efff552d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff552a740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff552a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff552aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff552ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff552ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5529020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff55291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5529340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff55294d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5529660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55297f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5529980"/>
        <function-ref name="set" scoped="" ref="0x7efff5529b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5529ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5529e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5528120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5525100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5525100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5525480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5525610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55257a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5525930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5525ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5525c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5525de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5524020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55241b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5524340"/>
        <function-ref name="set" scoped="" ref="0x7efff55244d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5524660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55247f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5524a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5524c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5521d10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5521d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55200e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5520270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5520400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5520590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5520720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55208b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5520a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5520bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5520d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff551f020"/>
        <function-ref name="set" scoped="" ref="0x7efff551f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff551f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff551f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff551f760"/>
        <function-ref name="clr" scoped="" ref="0x7efff551f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff551c740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff551c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff551cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff551cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff551cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff551a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff551a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff551a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff551a4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff551a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff551a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff551a980"/>
        <function-ref name="set" scoped="" ref="0x7efff551ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff551aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff551ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5519120"/>
        <function-ref name="clr" scoped="" ref="0x7efff55192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5516100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5516100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5516480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5516610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55167a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5516930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5516ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5516c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5516de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5515020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55151b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5515340"/>
        <function-ref name="set" scoped="" ref="0x7efff55154d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5515660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55157f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5515a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5515c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5512d10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5512d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55110e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5511270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5511400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5511590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5511720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55118b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5511a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5511bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5511d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5510020"/>
        <function-ref name="set" scoped="" ref="0x7efff55101b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5510340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55104d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5510760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55108f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff550d740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff550d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff550dac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff550dc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff550dde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff550c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff550c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff550c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff550c4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff550c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff550c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff550c980"/>
        <function-ref name="set" scoped="" ref="0x7efff550cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff550cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff550ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff550b120"/>
        <function-ref name="clr" scoped="" ref="0x7efff550b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5508100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5508100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5508480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5508610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff55087a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5508930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5508ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5508c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5508de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5507020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff55071b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5507340"/>
        <function-ref name="set" scoped="" ref="0x7efff55074d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5507660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55077f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5507a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5507c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5504d10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5504d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff55030e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5503270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5503400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5503590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5503720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff55038b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5503a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5503bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5503d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5502020"/>
        <function-ref name="set" scoped="" ref="0x7efff55021b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5502340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff55024d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5502760"/>
        <function-ref name="clr" scoped="" ref="0x7efff55028f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54ff740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54ff740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54ffac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54ffc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54ffde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54fe1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54fe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54fe4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54fe660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54fe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54fe980"/>
        <function-ref name="set" scoped="" ref="0x7efff54feb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54feca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54fee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54fd120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54fa100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54fa480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54fa610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54fa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54fa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54faac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54fac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54fade0"/>
        <function-ref name="get" scoped="" ref="0x7efff54f9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54f91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54f9340"/>
        <function-ref name="set" scoped="" ref="0x7efff54f94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54f9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54f97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54f9a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54f9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54f5e60" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54f5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54f4210"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54f43a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54f4530"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54f46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54f4850"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54f49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54f4b70"/>
        <function-ref name="get" scoped="" ref="0x7efff54f4d00"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54f3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54f31b0"/>
        <function-ref name="set" scoped="" ref="0x7efff54f3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54f34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54f3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54f38f0"/>
        <function-ref name="clr" scoped="" ref="0x7efff54f3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54f09f0" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54f09f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54f0d70"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54ef020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54ef1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54ef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54ef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54ef660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54ef7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff54ef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54efb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54efca0"/>
        <function-ref name="set" scoped="" ref="0x7efff54efe30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54ee020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54ee1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54ee440"/>
        <function-ref name="clr" scoped="" ref="0x7efff54ee5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54eb460" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54eb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54eb7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54eb970"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54ebb00"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54ebc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54ebe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54ea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54ea1b0"/>
        <function-ref name="get" scoped="" ref="0x7efff54ea340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54ea4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54ea660"/>
        <function-ref name="set" scoped="" ref="0x7efff54ea7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54ea980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54eab10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54eada0"/>
        <function-ref name="clr" scoped="" ref="0x7efff54e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54e7e00" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54e7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54e61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54e6350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54e64e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54e6670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54e6800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54e6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54e6b20"/>
        <function-ref name="get" scoped="" ref="0x7efff54e6cb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54e6e40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54e5020"/>
        <function-ref name="set" scoped="" ref="0x7efff54e51b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54e5340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54e54d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54e5760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54e58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54e2740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54e2ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54e2c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54e2de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54e11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54e1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54e14d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54e1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54e17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54e1980"/>
        <function-ref name="set" scoped="" ref="0x7efff54e1b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54e1ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54e1e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54e0120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54dd100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54dd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54dd480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54dd610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54dd7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54dd930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54ddac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54ddc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54ddde0"/>
        <function-ref name="get" scoped="" ref="0x7efff54dc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54dc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54dc340"/>
        <function-ref name="set" scoped="" ref="0x7efff54dc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54dc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54dc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54dca80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54dcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54d9d10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54d9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54d80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54d8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54d8400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54d8590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54d8720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54d88b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54d8a40"/>
        <function-ref name="get" scoped="" ref="0x7efff54d8bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54d8d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54d7020"/>
        <function-ref name="set" scoped="" ref="0x7efff54d71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54d7340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54d74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54d7760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54d78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54d4740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54d4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54d4ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54d4c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54d4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54d21b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54d2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54d24d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54d2660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54d27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54d2980"/>
        <function-ref name="set" scoped="" ref="0x7efff54d2b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54d2ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54d2e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54d1120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54ce100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54ce480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54ce610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54ce7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54ce930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54ceac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54cec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54cede0"/>
        <function-ref name="get" scoped="" ref="0x7efff54cd020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54cd1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54cd340"/>
        <function-ref name="set" scoped="" ref="0x7efff54cd4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54cd660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54cd7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54cda80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54cdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54cad10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54cad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54c90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54c9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54c9400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54c9590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54c9720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54c98b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54c9a40"/>
        <function-ref name="get" scoped="" ref="0x7efff54c9bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54c9d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54c8020"/>
        <function-ref name="set" scoped="" ref="0x7efff54c81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54c8340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54c84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54c8760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54c88f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54c5740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54c5ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54c5c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54c5de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54c4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54c41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54c4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54c44d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54c4660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54c47f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54c4980"/>
        <function-ref name="set" scoped="" ref="0x7efff54c4b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54c4ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54c4e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54c3120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54c32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54c0100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54c0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54c0480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54c0610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54c07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54c0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54c0ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54c0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54c0de0"/>
        <function-ref name="get" scoped="" ref="0x7efff54bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54bf1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54bf340"/>
        <function-ref name="set" scoped="" ref="0x7efff54bf4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54bf660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54bf7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54bfa80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54bcd10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54bcd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54bb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54bb270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54bb400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54bb590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54bb720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54bb8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54bba40"/>
        <function-ref name="get" scoped="" ref="0x7efff54bbbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54bbd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54ba020"/>
        <function-ref name="set" scoped="" ref="0x7efff54ba1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54ba340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54ba4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54ba760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54ba8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54b7740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54b7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54b7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54b7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54b7de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54b64d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54b6980"/>
        <function-ref name="set" scoped="" ref="0x7efff54b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54b5120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54b2100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54b2480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54b2de0"/>
        <function-ref name="get" scoped="" ref="0x7efff54b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54b1340"/>
        <function-ref name="set" scoped="" ref="0x7efff54b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54aed10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54ac0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54ac270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54ac400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54ac590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54ac720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54ac8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54aca40"/>
        <function-ref name="get" scoped="" ref="0x7efff54acbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54acd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54ab020"/>
        <function-ref name="set" scoped="" ref="0x7efff54ab1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54ab340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54ab4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54ab760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54a8740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54a8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54a8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54a8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54a8de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54a71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54a74d0"/>
        <function-ref name="get" scoped="" ref="0x7efff54a7660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54a77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54a7980"/>
        <function-ref name="set" scoped="" ref="0x7efff54a7b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54a7ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54a7e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54a6120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff54a3100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff54a3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54a3480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff54a3610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54a37a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54a3930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54a3ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54a3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54a3de0"/>
        <function-ref name="get" scoped="" ref="0x7efff54a2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54a21b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff54a2340"/>
        <function-ref name="set" scoped="" ref="0x7efff54a24d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff54a2660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54a27f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54a2a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff54a2c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff549fd10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff549fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff549e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff549e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff549e400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff549e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff549e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff549e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff549ea40"/>
        <function-ref name="get" scoped="" ref="0x7efff549ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff549ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff549d020"/>
        <function-ref name="set" scoped="" ref="0x7efff549d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff549d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff549d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff549d760"/>
        <function-ref name="clr" scoped="" ref="0x7efff549d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff549a740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff549a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff549aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff549ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff549ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5499020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5499340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff54994d0"/>
        <function-ref name="get" scoped="" ref="0x7efff5499660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5499980"/>
        <function-ref name="set" scoped="" ref="0x7efff5499b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5499ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5499e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5498120"/>
        <function-ref name="clr" scoped="" ref="0x7efff54982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5495100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5495100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5495480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5495610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54957a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5495930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5495ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5495c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5495de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5494020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5494340"/>
        <function-ref name="set" scoped="" ref="0x7efff54944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5494660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5494a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5494c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5491d10" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5491d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff54900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5490270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5490400"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5490590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5490720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5490a40"/>
        <function-ref name="get" scoped="" ref="0x7efff5490bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5490d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff548f020"/>
        <function-ref name="set" scoped="" ref="0x7efff548f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff548f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff548f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff548f760"/>
        <function-ref name="clr" scoped="" ref="0x7efff548f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff548c740" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff548c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff548cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff548cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff548cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff548b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff548b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff548b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff548b4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff548b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff548b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff548b980"/>
        <function-ref name="set" scoped="" ref="0x7efff548bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff548bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff548be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff548a120"/>
        <function-ref name="clr" scoped="" ref="0x7efff548a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efff5486100" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efff5486100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5486480"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5486610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5486930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5486ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5486c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5486de0"/>
        <function-ref name="get" scoped="" ref="0x7efff5485020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff54851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5485340"/>
        <function-ref name="set" scoped="" ref="0x7efff54854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5485660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5485a80"/>
        <function-ref name="clr" scoped="" ref="0x7efff5485c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efff540e2f0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff540e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff540e670"/>
        <function-ref name="isInput" scoped="" ref="0x7efff540e800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff540e990"/>
        <function-ref name="toggle" scoped="" ref="0x7efff540eb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff540ecb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff540ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff540d020"/>
        <function-ref name="get" scoped="" ref="0x7efff540d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff540d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff540d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efff540d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff540d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff540d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff540dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efff540dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efff541f020" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efff541f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff541f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff541f530"/>
        <function-ref name="toggle" scoped="" ref="0x7efff541f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff541f850"/>
        <function-ref name="get" scoped="" ref="0x7efff541f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff541fb70"/>
        <function-ref name="set" scoped="" ref="0x7efff541fd00"/>
        <function-ref name="clr" scoped="" ref="0x7efff540e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efff540ade0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff540ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5409180"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5409310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff54094a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5409630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff54097c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5409950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5409ae0"/>
        <function-ref name="get" scoped="" ref="0x7efff5409c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5409e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5408020"/>
        <function-ref name="set" scoped="" ref="0x7efff54081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5408340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff54084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5408760"/>
        <function-ref name="clr" scoped="" ref="0x7efff54088f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efff540bb90" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efff540bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff540a020"/>
        <function-ref name="isInput" scoped="" ref="0x7efff540a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff540a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff540a4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff540a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff540a7f0"/>
        <function-ref name="set" scoped="" ref="0x7efff540a980"/>
        <function-ref name="clr" scoped="" ref="0x7efff540ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efff5405930" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efff5405930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5405cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5405e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff5404020"/>
        <function-ref name="toggle" scoped="" ref="0x7efff54041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5404340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff54044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5404660"/>
        <function-ref name="get" scoped="" ref="0x7efff54047f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5404980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5404b10"/>
        <function-ref name="set" scoped="" ref="0x7efff5404ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5404e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff5403020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff54032b0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5403440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efff5406710" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efff5406710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5406a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5406c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5406db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff5405020"/>
        <function-ref name="get" scoped="" ref="0x7efff54051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff5405340"/>
        <function-ref name="set" scoped="" ref="0x7efff54054d0"/>
        <function-ref name="clr" scoped="" ref="0x7efff5405660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efff53f99f0" loc="5:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efff53f99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efff53f9d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7efff53efa80" loc="7:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7efff53efa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efff53efe00"/>
        <function-ref name="stopDone" scoped="" ref="0x7efff53f3020"/>
        <function-ref name="start" scoped="" ref="0x7efff53f31b0"/>
        <function-ref name="stop" scoped="" ref="0x7efff53f3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7efff5388b50" loc="10:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7efff5388b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff5394020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="USBTimer" ref="0x7efff537fe40" loc="11:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="USBTimer" scoped="" ref="0x7efff537fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff537c390"/>
        <function-ref name="fired" scoped="" ref="0x7efff537e970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff537d720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff537d2a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efff537cc90"/>
        <function-ref name="gett0" scoped="" ref="0x7efff537c810"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff537edf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff5389a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff537dd30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff537e020"/>
        <function-ref name="stop" scoped="" ref="0x7efff537e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff53f6080" loc="6:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff53f6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff53f6400"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff53f6590"/>
        <function-ref name="led1On" scoped="" ref="0x7efff53f6720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff53f68b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff53f6a40"/>
        <function-ref name="get" scoped="" ref="0x7efff53f6bd0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff53f6d60"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff53f54d0"/>
        <function-ref name="set" scoped="" ref="0x7efff53f5020"/>
        <function-ref name="led0On" scoped="" ref="0x7efff53f51b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efff53f5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7efff538b250" loc="9:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7efff538b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff538b5d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff538b760"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff538b8f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff538ba80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff538bc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7efff5396190" loc="8:MasterC.nc">
      <component-ref qname="MasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7efff5396190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff5396510"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff53966a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff5396830"/>
        <function-ref name="cancel" scoped="" ref="0x7efff53969c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff5396b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efff5362320" loc="46:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efff5362320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efff53626a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efff5362830"/>
        <function-ref name="start" scoped="" ref="0x7efff53629c0"/>
        <function-ref name="stop" scoped="" ref="0x7efff5362b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efff5361370" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efff5361370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff53616f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff5361880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff5361a10"/>
        <function-ref name="cancel" scoped="" ref="0x7efff5361ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff5361d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efff5360b40" loc="49:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efff5360b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff535f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff535f1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff535f340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff535f4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff535f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efff5360530" loc="48:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efff5360530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff53608b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff534d9a0" loc="53:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff534d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff534dd20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff534b020"/>
        <function-ref name="led1On" scoped="" ref="0x7efff534b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff534b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff534b4d0"/>
        <function-ref name="get" scoped="" ref="0x7efff534b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff534b7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff534be30"/>
        <function-ref name="set" scoped="" ref="0x7efff534b980"/>
        <function-ref name="led0On" scoped="" ref="0x7efff534bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7efff534bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efff534d020" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efff534d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efff534d3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efff534d530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efff534d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efff534cbe0" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff534cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff535e020"/>
        <function-ref name="source" scoped="" ref="0x7efff535e1b0"/>
        <function-ref name="address" scoped="" ref="0x7efff535e340"/>
        <function-ref name="destination" scoped="" ref="0x7efff535e4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7efff535e660"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff535e7f0"/>
        <function-ref name="type" scoped="" ref="0x7efff535e980"/>
        <function-ref name="setType" scoped="" ref="0x7efff535eb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff535eca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff535ee30"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff535d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efff52e39f0" loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efff52e39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff52e3d70"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff52e2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff52e21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff52e2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff52e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efff52e2760" loc="55:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efff52e2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff52e2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efff53437d0" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efff53437d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff5343b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff5343d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff52e6020"/>
        <function-ref name="cancel" scoped="" ref="0x7efff52e61b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff52e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efff52e4400" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efff52e4400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff52e4780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff52e4910"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff52e4aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff52e4c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff52e4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efff52e66c0" loc="48:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efff52e66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff52e6a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efff52e3060" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efff52e3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efff52e33e0"/>
        <function-ref name="noAck" scoped="" ref="0x7efff52e3570"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efff52e3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efff52e6cb0" loc="49:/home/xthuan/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff52e6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff52e50a0"/>
        <function-ref name="source" scoped="" ref="0x7efff52e5230"/>
        <function-ref name="address" scoped="" ref="0x7efff52e53c0"/>
        <function-ref name="destination" scoped="" ref="0x7efff52e5550"/>
        <function-ref name="setSource" scoped="" ref="0x7efff52e56e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff52e5870"/>
        <function-ref name="type" scoped="" ref="0x7efff52e5a00"/>
        <function-ref name="setType" scoped="" ref="0x7efff52e5b90"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff52e5d20"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff52e4020"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff52e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efff52dd2f0" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efff52dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efff52dd670"/>
        <function-ref name="stopDone" scoped="" ref="0x7efff52dd800"/>
        <function-ref name="start" scoped="" ref="0x7efff52dd990"/>
        <function-ref name="stop" scoped="" ref="0x7efff52ddb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efff52dce10" loc="52:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efff52dce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff52db1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff52db350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff52db4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff52db670"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff52db800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff52e0bc0" loc="49:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff52e0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff52dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efff52dc320" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efff52dc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff52dc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff52d9940" loc="56:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff52d9940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff52d9cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff52d9e50"/>
        <function-ref name="led1On" scoped="" ref="0x7efff52d3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff52d31b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff52d3340"/>
        <function-ref name="get" scoped="" ref="0x7efff52d34d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff52d3660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff52d3ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff52d37f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efff52d3980"/>
        <function-ref name="led2On" scoped="" ref="0x7efff52d3b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7efff52d9020" loc="55:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efff52d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efff52d93a0"/>
        <function-ref name="offset" scoped="" ref="0x7efff52d9530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efff52d96c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efff52cb450" loc="66:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efff52cb450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efff52cb7d0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efff52cb960"/>
        <function-ref name="start" scoped="" ref="0x7efff52cbaf0"/>
        <function-ref name="stop" scoped="" ref="0x7efff52cbc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7efff5264e40" loc="332:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7efff5264e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff52631e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efff5263370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7efff52b7e00" loc="74:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7efff52b7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff52b91c0"/>
        <function-ref name="stop" scoped="" ref="0x7efff52b9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7efff529bd10" loc="191:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7efff529bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff529a0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efff529a270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff52cdd60" loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff52cdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff52cb180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7efff52b4a80" loc="75:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7efff52b4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7efff52b4e00"/>
        <function-ref name="flush" scoped="" ref="0x7efff52b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7efff5266400" loc="322:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7efff5266400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff5266780"/>
        <function-ref name="runTask" scoped="" ref="0x7efff5266910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7efff52bbe30" loc="72:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efff52bbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efff52c41e0"/>
        <function-ref name="resetSend" scoped="" ref="0x7efff52c4370"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efff52c4500"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efff52c4690"/>
        <function-ref name="putData" scoped="" ref="0x7efff52c4820"/>
        <function-ref name="putDone" scoped="" ref="0x7efff52c49b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efff52c4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff52c4dc0" loc="73:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff52c4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff52c0180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff52c0310"/>
        <function-ref name="led1On" scoped="" ref="0x7efff52c04a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff52c0630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff52c07c0"/>
        <function-ref name="get" scoped="" ref="0x7efff52c0950"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff52c0ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff52ba1b0"/>
        <function-ref name="set" scoped="" ref="0x7efff52c0c70"/>
        <function-ref name="led0On" scoped="" ref="0x7efff52c0e00"/>
        <function-ref name="led2On" scoped="" ref="0x7efff52ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7efff525f0c0" loc="341:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efff525f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff525f440"/>
        <function-ref name="runTask" scoped="" ref="0x7efff525f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7efff52c54a0" loc="67:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efff52c54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efff52c5820"/>
        <function-ref name="nextByte" scoped="" ref="0x7efff52c59b0"/>
        <function-ref name="startSend" scoped="" ref="0x7efff52c5b40"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efff52c5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7efff52c1ad0" loc="68:/home/xthuan/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efff52c1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efff52c1e50"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efff52c8020"/>
        <function-ref name="endPacket" scoped="" ref="0x7efff52c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7efff5195c50" loc="275:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7efff5195c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff5194020"/>
        <function-ref name="runTask" scoped="" ref="0x7efff51941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efff519a830" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efff519a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff519abd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff519ad60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff5199020"/>
        <function-ref name="cancel" scoped="" ref="0x7efff51991b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff5199340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7efff5194480" loc="158:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7efff5194480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff5194800"/>
        <function-ref name="runTask" scoped="" ref="0x7efff5194990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efff519a110" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efff519a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff519a4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7efff5199760" loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7efff5199760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efff53ad0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efff5199b00"/>
        <function-ref name="offset" scoped="" ref="0x7efff5199c90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efff5199e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff5196590" loc="57:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff5196590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff5196910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff5196aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7efff5196c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff5196dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff5195020"/>
        <function-ref name="get" scoped="" ref="0x7efff51951b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff5195340"/>
        <function-ref name="led2On" scoped="" ref="0x7efff5195980"/>
        <function-ref name="set" scoped="" ref="0x7efff5195660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff51954d0"/>
        <function-ref name="led0On" scoped="" ref="0x7efff51957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7efff51989d0" loc="56:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efff51989d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efff5198d50"/>
        <function-ref name="nextByte" scoped="" ref="0x7efff5196020"/>
        <function-ref name="startSend" scoped="" ref="0x7efff51961b0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efff5196340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7efff51980e0" loc="55:/home/xthuan/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efff51980e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efff5198460"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efff51985f0"/>
        <function-ref name="endPacket" scoped="" ref="0x7efff5198780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7efff5184d20" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efff5184d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff518e0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efff518e270"/>
        <function-ref name="receive" scoped="" ref="0x7efff518e400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efff518e590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efff518e720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efff518e8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff518ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7efff5192b70" loc="48:/home/xthuan/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efff5192b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efff518f020"/>
        <function-ref name="resetSend" scoped="" ref="0x7efff518f1b0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efff518f340"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efff518f4d0"/>
        <function-ref name="putData" scoped="" ref="0x7efff518f660"/>
        <function-ref name="putDone" scoped="" ref="0x7efff518f7f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efff518f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff518ecc0" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff518ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff518d0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff518d230"/>
        <function-ref name="led1On" scoped="" ref="0x7efff518d3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff518d550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff518d6e0"/>
        <function-ref name="get" scoped="" ref="0x7efff518d870"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff518da00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff51821b0"/>
        <function-ref name="set" scoped="" ref="0x7efff518db90"/>
        <function-ref name="led0On" scoped="" ref="0x7efff518dd20"/>
        <function-ref name="led2On" scoped="" ref="0x7efff5182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efff5166020" loc="6:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efff5166020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff51663a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efff5166530"/>
        <function-ref name="receive" scoped="" ref="0x7efff51666c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efff5166850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efff51688d0" loc="5:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efff51688d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff5168c50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efff5168de0"/>
        <function-ref name="receive" scoped="" ref="0x7efff5167020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efff51671b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efff5167340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efff51674d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff5167660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efff51680c0" loc="4:/home/xthuan/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efff51680c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff5168440"/>
        <function-ref name="stop" scoped="" ref="0x7efff51685d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efff4ebec70" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4ebec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efff4ebd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff4ebd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efff4ebc440" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efff4ebc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4ebc7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efff4ebc950"/>
        <function-ref name="receive" scoped="" ref="0x7efff4ebcae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efff4ebcc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efff4ebb020" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff4ebb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efff4ebb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efff4ebd440" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efff4ebd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4ebd7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efff4ebd950"/>
        <function-ref name="receive" scoped="" ref="0x7efff4ebdae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efff4ebdc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efff4ebde00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efff4ebc020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff4ebc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff4ebe020" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff4ebe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4ebe3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff4ebe530"/>
        <function-ref name="request" scoped="" ref="0x7efff4ebe6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efff4ebe850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4ebe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efff50fcdd0" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff50fcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff50fe180"/>
        <function-ref name="configure" scoped="" ref="0x7efff50fe310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efff50fa210" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efff50fa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff50fa590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efff50fa720"/>
        <function-ref name="receive" scoped="" ref="0x7efff50fa8b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efff50faa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efff50f8600" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff50f8600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efff50f8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efff50feb50" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efff50feb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff50fb020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efff50fb1b0"/>
        <function-ref name="receive" scoped="" ref="0x7efff50fb340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efff50fb4d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efff50fb660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efff50fb7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff50fb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efff50f9370" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efff50f9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff50f96f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff50f9880"/>
        <function-ref name="request" scoped="" ref="0x7efff50f9a10"/>
        <function-ref name="granted" scoped="" ref="0x7efff50f9ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff50f9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff5100320" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff5100320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff51006a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff5100830"/>
        <function-ref name="request" scoped="" ref="0x7efff51009c0"/>
        <function-ref name="granted" scoped="" ref="0x7efff5100b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff5100ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efff50f3be0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efff50f3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff50f6020"/>
        <function-ref name="txDone" scoped="" ref="0x7efff50f61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efff506be70" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff506be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff506a240"/>
        <function-ref name="configure" scoped="" ref="0x7efff506a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efff5068890" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efff5068890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff5068c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efff5068dc0"/>
        <function-ref name="receive" scoped="" ref="0x7efff5067020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efff50671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efff50663e0" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff50663e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efff5066780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efff5066a50" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efff5066a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efff5066dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efff5065020"/>
        <function-ref name="setUctl" scoped="" ref="0x7efff50651b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efff5065340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efff50654d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efff5065660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efff50657f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efff5065980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efff5065b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efff5065ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efff5065e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efff5064020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efff50641b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efff5064440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efff50645d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efff5064760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efff50648f0"/>
        <function-ref name="isUart" scoped="" ref="0x7efff5064a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efff5064c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7efff5064da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efff5063020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efff50631b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efff5063340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efff50634d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff5063660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efff50639f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efff5063b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7efff5063d10"/>
        <function-ref name="tx" scoped="" ref="0x7efff5062020"/>
        <function-ref name="getUctl" scoped="" ref="0x7efff50621b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efff5062340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efff50624d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efff5062660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efff50627f0"/>
        <function-ref name="rx" scoped="" ref="0x7efff5062980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efff5062b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efff5062ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efff5062e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efff5061020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efff50611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efff506a790" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efff506a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff506ab30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efff506acc0"/>
        <function-ref name="receive" scoped="" ref="0x7efff506ae50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efff5068020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efff50681b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efff5068340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff50684d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efff5060020" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff5060020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff5060e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff505f800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff505f340"/>
        <function-ref name="overflow" scoped="" ref="0x7efff505fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efff50675b0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efff50675b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff5067950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff5067ae0"/>
        <function-ref name="request" scoped="" ref="0x7efff5067c70"/>
        <function-ref name="granted" scoped="" ref="0x7efff5067e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff5066020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff506b0d0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff506b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff506b470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff506b600"/>
        <function-ref name="request" scoped="" ref="0x7efff506b790"/>
        <function-ref name="granted" scoped="" ref="0x7efff506b920"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff506bab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efff50615b0" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efff50615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff5061950"/>
        <function-ref name="txDone" scoped="" ref="0x7efff5061ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff505e120" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff505e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff505e4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff505e630"/>
        <function-ref name="led1On" scoped="" ref="0x7efff505e7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff505e950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff505eae0"/>
        <function-ref name="get" scoped="" ref="0x7efff505ec70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff505ee00"/>
        <function-ref name="led2On" scoped="" ref="0x7efff505d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efff505d1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff505d020"/>
        <function-ref name="led0On" scoped="" ref="0x7efff505d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efff504e860" loc="78:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff504e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff504ebe0"/>
        <function-ref name="txDone" scoped="" ref="0x7efff504ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efff5051500" loc="76:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff5051500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff5051880"/>
        <function-ref name="stop" scoped="" ref="0x7efff5051a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efff5051d30" loc="77:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff5051d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efff50540e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efff5054270"/>
        <function-ref name="setUctl" scoped="" ref="0x7efff5054400"/>
        <function-ref name="enableUart" scoped="" ref="0x7efff5054590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efff5054720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efff50548b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efff5054a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efff5054bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efff5054d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efff5053020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efff50531b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efff5053340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efff50534d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efff5053760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efff50538f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efff5053a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efff5053c10"/>
        <function-ref name="isUart" scoped="" ref="0x7efff5053da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efff5050020"/>
        <function-ref name="isSpi" scoped="" ref="0x7efff50501b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efff5050340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efff50504d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efff5050660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efff50507f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efff5050980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efff5050d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efff504f020"/>
        <function-ref name="setUbr" scoped="" ref="0x7efff504f1b0"/>
        <function-ref name="tx" scoped="" ref="0x7efff504f340"/>
        <function-ref name="getUctl" scoped="" ref="0x7efff504f4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efff504f660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efff504f7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efff504f980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efff504fb10"/>
        <function-ref name="rx" scoped="" ref="0x7efff504fca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efff504fe30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efff504e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efff504e1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efff504e340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efff504e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efff5041990" loc="80:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efff5041990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5041d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5040020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff50401b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5040340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff50404d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5040660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff50407f0"/>
        <function-ref name="get" scoped="" ref="0x7efff5040980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5040b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5040ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff5040e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff503f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff503f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff503f440"/>
        <function-ref name="clr" scoped="" ref="0x7efff503f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efff5045130" loc="76:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efff5045130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff50454b0"/>
        <function-ref name="txDone" scoped="" ref="0x7efff5045640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efff503f990" loc="81:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efff503f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff503fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efff503e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff503e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff503e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff503e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff503e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff503e7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff503e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff503eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff503eca0"/>
        <function-ref name="set" scoped="" ref="0x7efff503ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff503d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff503d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff503d440"/>
        <function-ref name="clr" scoped="" ref="0x7efff503d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efff503d990" loc="82:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efff503d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff503dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efff503c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff503c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff503c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff503c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff503c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff503c7f0"/>
        <function-ref name="get" scoped="" ref="0x7efff503c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff503cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff503cca0"/>
        <function-ref name="set" scoped="" ref="0x7efff503ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff503b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff503b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff503b440"/>
        <function-ref name="clr" scoped="" ref="0x7efff503b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efff504a550" loc="75:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efff504a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efff504a8d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efff504aa60"/>
        <function-ref name="setUctl" scoped="" ref="0x7efff504abf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efff504ad80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efff5049020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efff50491b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efff5049340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efff50494d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efff5049660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efff50497f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efff5049980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efff5049b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efff5049ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efff5048020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efff50481b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efff5048340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efff50484d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efff5048660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efff50487f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efff5048980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efff5048b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efff5048ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efff5048e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efff5047020"/>
        <function-ref name="getMode" scoped="" ref="0x7efff50471b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efff5047540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efff50476d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efff5047860"/>
        <function-ref name="tx" scoped="" ref="0x7efff50479f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efff5047b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7efff5047d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efff5046020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efff50461b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efff5046340"/>
        <function-ref name="rx" scoped="" ref="0x7efff50464d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efff5046660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efff50467f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efff5046980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efff5046b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efff5046ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efff504dbd0" loc="74:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff504dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff504a020"/>
        <function-ref name="stop" scoped="" ref="0x7efff504a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efff5043990" loc="79:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efff5043990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5043d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5042020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff50421b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5042340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff50424d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5042660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff50427f0"/>
        <function-ref name="get" scoped="" ref="0x7efff5042980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5042b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5042ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff5042e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5041020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff50411b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5041440"/>
        <function-ref name="clr" scoped="" ref="0x7efff50415d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efff5045a00" loc="78:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efff5045a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efff5045d80"/>
        <function-ref name="isInput" scoped="" ref="0x7efff5044020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efff50441b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efff5044340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efff50444d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efff5044660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efff50447f0"/>
        <function-ref name="get" scoped="" ref="0x7efff5044980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efff5044b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efff5044ca0"/>
        <function-ref name="set" scoped="" ref="0x7efff5044e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efff5043020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efff50431b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efff5043440"/>
        <function-ref name="clr" scoped="" ref="0x7efff50435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efff4fbd110" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff4fbd110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4fbc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4fbc9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4fbc4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4fbce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7efff4fb8210" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efff4fb8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4fb7090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4fb7a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4fb7550"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4fb5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efff4fa5450" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4fa5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff4fa57d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff4fa5960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff4fa5af0"/>
        <function-ref name="get" scoped="" ref="0x7efff4fa5c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff4fa5e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4fa1020"/>
        <function-ref name="getMode" scoped="" ref="0x7efff4fa11b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4fa1340"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4fa14d0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff4fa1660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff4fa17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efff4fb32a0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff4fb32a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4fa60d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4fa6a50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4fa6590"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4fa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efff473c020" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efff473c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efff473c3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff473c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efff4735440" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4735440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff47357c0"/>
        <function-ref name="configure" scoped="" ref="0x7efff4735950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efff4736c10" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efff4736c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff4735020"/>
        <function-ref name="txDone" scoped="" ref="0x7efff47351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff473d340" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff473d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff473d6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff473d850"/>
        <function-ref name="request" scoped="" ref="0x7efff473d9e0"/>
        <function-ref name="granted" scoped="" ref="0x7efff473db70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff473dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efff473a020" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efff473a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efff473a3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efff473a530"/>
        <function-ref name="setUctl" scoped="" ref="0x7efff473a6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efff473a850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efff473a9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efff473ab70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efff473ad00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efff4739020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efff47391b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efff4739340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efff47394d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efff4739660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efff47397f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efff4739a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efff4739c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efff4739da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efff4738020"/>
        <function-ref name="isUart" scoped="" ref="0x7efff47381b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efff4738340"/>
        <function-ref name="isSpi" scoped="" ref="0x7efff47384d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efff4738660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efff47387f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efff4738980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efff4738b10"/>
        <function-ref name="getMode" scoped="" ref="0x7efff4738ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efff4737220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efff47373b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efff4737540"/>
        <function-ref name="tx" scoped="" ref="0x7efff47376d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efff4737860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efff47379f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efff4737b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efff4737d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efff4736020"/>
        <function-ref name="rx" scoped="" ref="0x7efff47361b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efff4736340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efff47364d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efff4736660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efff47367f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efff4736980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efff473c7c0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff473c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff473cb40"/>
        <function-ref name="userId" scoped="" ref="0x7efff473ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efff4f87d50" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4f87d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efff4f85100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff4f85290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efff4f84370" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4f84370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff4f846f0"/>
        <function-ref name="configure" scoped="" ref="0x7efff4f84880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efff4f8bce0" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efff4f8bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff4f880a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efff4f88230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff4f88a60" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff4f88a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4f88de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff4f87020"/>
        <function-ref name="request" scoped="" ref="0x7efff4f871b0"/>
        <function-ref name="granted" scoped="" ref="0x7efff4f87340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4f874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efff4f85590" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4f85590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff4f85910"/>
        <function-ref name="userId" scoped="" ref="0x7efff4f85aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efff4f6e4b0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4f6e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff4f6e830"/>
        <function-ref name="userId" scoped="" ref="0x7efff4f6e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efff4f815c0" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efff4f815c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff4f81960"/>
        <function-ref name="txDone" scoped="" ref="0x7efff4f81af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efff4f6fe70" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efff4f6fe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff4f6e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efff4f6f020" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efff4f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efff4f6f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efff4f6f690" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efff4f6f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efff4f6fa10"/>
        <function-ref name="txDone" scoped="" ref="0x7efff4f6fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efff4ef4bf0" loc="92:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efff4ef4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efff4ef3020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff4ef31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efff4ef2930" loc="96:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff4ef2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff4ef2cd0"/>
        <function-ref name="configure" scoped="" ref="0x7efff4ef2e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efff4ef3400" loc="93:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ef3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4ef3780"/>
        <function-ref name="requested" scoped="" ref="0x7efff4ef3910"/>
        <function-ref name="granted" scoped="" ref="0x7efff4ef3aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4ef3c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff4ef3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff4ef5e60" loc="91:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff4ef5e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4ef4230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff4ef43c0"/>
        <function-ref name="request" scoped="" ref="0x7efff4ef4550"/>
        <function-ref name="granted" scoped="" ref="0x7efff4ef46e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4ef4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efff4ef2060" loc="94:/home/xthuan/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ef2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff4ef23e0"/>
        <function-ref name="userId" scoped="" ref="0x7efff4ef2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff46b93b0" loc="44:/home/xthuan/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff46b93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff46b9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efff46b99c0" loc="45:/home/xthuan/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efff46b99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efff46b9d40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efff46b7020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efff46b71b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efff46b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efff46b5a60" loc="55:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efff46b5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efff46b5e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff46b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efff46b3790" loc="60:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efff46b3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efff46b3b30"/>
        <function-ref name="configure" scoped="" ref="0x7efff46b3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efff46b2020" loc="61:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efff46b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efff46b23a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efff46b2530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efff46b26c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efff46b2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efff46b4270" loc="56:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff46b4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff46b45f0"/>
        <function-ref name="requested" scoped="" ref="0x7efff46b4780"/>
        <function-ref name="granted" scoped="" ref="0x7efff46b4910"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff46b4aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff46b4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efff46b2aa0" loc="62:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efff46b2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efff46b2e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efff46b0020"/>
        <function-ref name="led1On" scoped="" ref="0x7efff46b01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efff46b0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efff46b04d0"/>
        <function-ref name="get" scoped="" ref="0x7efff46b0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efff46b07f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efff46b0e30"/>
        <function-ref name="set" scoped="" ref="0x7efff46b0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efff46b0980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efff46b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efff46b6c80" loc="54:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff46b6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff46b50a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff46b5230"/>
        <function-ref name="request" scoped="" ref="0x7efff46b53c0"/>
        <function-ref name="granted" scoped="" ref="0x7efff46b5550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff46b56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efff46b4e80" loc="57:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff46b4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff46b3220"/>
        <function-ref name="userId" scoped="" ref="0x7efff46b33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efff46af160" loc="75:/home/xthuan/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efff46af160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff46af4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efff46af670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efff4ed7400" loc="72:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efff4ed7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efff4ed7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efff4ed79d0" loc="73:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff4ed79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4ed7d50"/>
        <function-ref name="requested" scoped="" ref="0x7efff4ed6020"/>
        <function-ref name="granted" scoped="" ref="0x7efff4ed61b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4ed6340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff4ed64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efff4eedb20" loc="70:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff4eedb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff4ed7020"/>
        <function-ref name="stop" scoped="" ref="0x7efff4ed71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efff4ed6720" loc="74:/home/xthuan/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff4ed6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff4ed6aa0"/>
        <function-ref name="userId" scoped="" ref="0x7efff4ed6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efff467f0e0" loc="62:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efff467f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efff467f460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efff467f6b0" loc="63:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efff467f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff467fa30"/>
        <function-ref name="requested" scoped="" ref="0x7efff467fbc0"/>
        <function-ref name="granted" scoped="" ref="0x7efff467fd50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff467e020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efff467e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efff4680900" loc="60:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efff4680900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff4680c80"/>
        <function-ref name="stop" scoped="" ref="0x7efff4680e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efff467e400" loc="64:/home/xthuan/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efff467e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efff467e780"/>
        <function-ref name="userId" scoped="" ref="0x7efff467e910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7efff4eb7920" loc="3:/home/xthuan/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efff4eb7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efff4eb7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efff4eb6020" loc="4:/home/xthuan/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efff4eb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efff4eb63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efff4eb6530"/>
        <function-ref name="request" scoped="" ref="0x7efff4eb66c0"/>
        <function-ref name="granted" scoped="" ref="0x7efff4eb6850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efff4eb69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efff4eb70c0" loc="2:/home/xthuan/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efff4eb70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efff4eb7440"/>
        <function-ref name="stop" scoped="" ref="0x7efff4eb75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7efff4ea48d0" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7efff4ea48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efff4ea4c50"/>
        <function-ref name="offset" scoped="" ref="0x7efff4ea4de0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efff4ea1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efff4e92640" loc="45:/home/xthuan/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="MasterAppC.USBTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff4e92640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d00c40"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d011e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4d00020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4d01ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4cff590"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4cff110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d01660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4d03390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4d00630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4d03860"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d03d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efff4e89610" loc="49:/home/xthuan/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e89610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4e85c40"/>
        <function-ref name="fired" scoped="" ref="0x7efff4e861e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4e85020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4e86ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4e84590"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4e84110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4e86660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4e88390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4e85630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4e88860"/>
        <function-ref name="stop" scoped="" ref="0x7efff4e88d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efff4e7fa40" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efff4e7fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4e7a020"/>
        <function-ref name="fired" scoped="" ref="0x7efff4e7d510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4e7b300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4e7de10"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4e7a920"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4e7a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4e7d990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4e7e670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4e7b910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4e7eb40"/>
        <function-ref name="stop" scoped="" ref="0x7efff4e7d090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efff4e75500" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efff4e75500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4e78170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff4e82c50" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff4e82c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff4e7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efff4da0020" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efff4da0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d9d870"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d9e840"/>
        <function-ref name="startAt" scoped="" ref="0x7efff4d9d220"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d9ed00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff4d9dd30"/>
        <function-ref name="start" scoped="" ref="0x7efff4da0e30"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d9e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff4da1760" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff4da1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff4da1ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efff466e2a0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efff466e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff466bb30"/>
        <function-ref name="fired" scoped="" ref="0x7efff466daa0"/>
        <function-ref name="startAt" scoped="" ref="0x7efff466b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff466b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff466a020"/>
        <function-ref name="start" scoped="" ref="0x7efff466d0d0"/>
        <function-ref name="stop" scoped="" ref="0x7efff466d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff466fa10" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff466fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff466fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efff4655a80" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4655a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff4655e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff4654020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff46541b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff4654340"/>
        <function-ref name="fired" scoped="" ref="0x7efff46544d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efff4658020" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff46583a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff4658530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff46586c0"/>
        <function-ref name="get" scoped="" ref="0x7efff4658850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff46589e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4658b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efff4658d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4656020"/>
        <function-ref name="overflow" scoped="" ref="0x7efff46561b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efff4656340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff46564d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efff4656760" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4656760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff4656ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff4656c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff4656e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff4655020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff46551b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff4655340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff46554d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff4655660"/>
        <function-ref name="setControl" scoped="" ref="0x7efff46557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efff4e533f0" loc="52:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efff4e533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff4e53770"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff4e53900"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff4e53a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff4e53c20"/>
        <function-ref name="fired" scoped="" ref="0x7efff4e53db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efff4e5ace0" loc="50:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efff4e5ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff4e570a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff4e57230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff4e573c0"/>
        <function-ref name="get" scoped="" ref="0x7efff4e57550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff4e576e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4e57870"/>
        <function-ref name="getMode" scoped="" ref="0x7efff4e57a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4e57b90"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4e57d20"/>
        <function-ref name="setMode" scoped="" ref="0x7efff4e56020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff4e561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efff4e56a40" loc="51:/home/xthuan/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff4e56a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff4e56dc0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff4e54020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff4e541b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff4e54340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff4e544d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff4e54660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff4e547f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff4e54980"/>
        <function-ref name="setControl" scoped="" ref="0x7efff4e54b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efff464b760" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efff464b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efff464bae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efff464bc70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efff464be00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efff464a020"/>
        <function-ref name="fired" scoped="" ref="0x7efff464a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efff464fdd0" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efff464fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff464d180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efff464d310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff464d4a0"/>
        <function-ref name="get" scoped="" ref="0x7efff464d630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff464d7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff464d950"/>
        <function-ref name="getMode" scoped="" ref="0x7efff464dae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff464dc70"/>
        <function-ref name="overflow" scoped="" ref="0x7efff464de00"/>
        <function-ref name="setMode" scoped="" ref="0x7efff464c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efff464c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efff4652bf0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efff4652bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff464f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7efff46504e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efff4650e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff46509a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff464f9a0"/>
        <function-ref name="start" scoped="" ref="0x7efff4651a80"/>
        <function-ref name="stop" scoped="" ref="0x7efff4650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efff4652360" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efff4652360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efff46526e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efff464c440" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efff464c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efff464c7c0"/>
        <function-ref name="getControl" scoped="" ref="0x7efff464c950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efff464cae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efff464cc70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efff464ce00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efff464b020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efff464b1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efff464b340"/>
        <function-ref name="setControl" scoped="" ref="0x7efff464b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efff4e05b80" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff4e05b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4e029b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4e00360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4e02e70"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4e00820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efff4ddf540" loc="63:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efff4ddf540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4dde3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4dded50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4dde890"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4ddc260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efff4de20f0" loc="62:/home/xthuan/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff4de20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4de0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4de09a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4de04e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4de0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efff46685f0" loc="61:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efff46685f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4666e50"/>
        <function-ref name="fired" scoped="" ref="0x7efff4667e00"/>
        <function-ref name="startAt" scoped="" ref="0x7efff4666800"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4666340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff4664340"/>
        <function-ref name="start" scoped="" ref="0x7efff4667430"/>
        <function-ref name="stop" scoped="" ref="0x7efff4667940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efff4662d20" loc="73:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efff4662d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff584daa0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efff584de10"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff465e670"/>
        <function-ref name="fired" scoped="" ref="0x7efff4660550"/>
        <function-ref name="startAt" scoped="" ref="0x7efff465e020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4660a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff465eb30"/>
        <function-ref name="start" scoped="" ref="0x7efff4661b60"/>
        <function-ref name="stop" scoped="" ref="0x7efff4660090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efff46649b0" loc="68:/home/xthuan/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff46649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff46637e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff46621b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4663ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4662670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7efff4d6a490" loc="74:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7efff4d6a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff4d6a810"/>
        <function-ref name="runTask" scoped="" ref="0x7efff4d6a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7efff4d6d1d0" loc="49:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efff4d6d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d6bb30"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d6c9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7efff4d6b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d6b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efff4d6a020"/>
        <function-ref name="start" scoped="" ref="0x7efff4d6c020"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d6c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efff4d73cf0" loc="48:/home/xthuan/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff4d73cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d6f220"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d717c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4d70590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4d70110"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4d6fb20"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4d6f6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d71c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4d72940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4d70ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4d72e10"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d71340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7efff4d19e80" loc="71:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7efff4d19e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff4d18220"/>
        <function-ref name="runTask" scoped="" ref="0x7efff4d183b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7efff4d1fc30" loc="49:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7efff4d1fc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d19110"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d1c6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4d1b4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4d1b020"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4d19a10"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4d19590"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d1cb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4d1d860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4d1bab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4d1dd30"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d1c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efff4d24690" loc="48:/home/xthuan/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efff4d24690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efff4d20cf0"/>
        <function-ref name="fired" scoped="" ref="0x7efff4d22260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efff4d20090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efff4d22ba0"/>
        <function-ref name="getdt" scoped="" ref="0x7efff4d1f680"/>
        <function-ref name="gett0" scoped="" ref="0x7efff4d1f1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efff4d22700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efff4d23390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efff4d206c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efff4d23880"/>
        <function-ref name="stop" scoped="" ref="0x7efff4d23d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efff4d16cf0" loc="48:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efff4d16cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4d15980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efff4d0b020" loc="49:/home/xthuan/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efff4d0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efff5d86ec0"/>
            <typename><typedef-ref name="TMilli" ref="0x7efff584d660"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efff4d0be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efff4d0a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efff4d0a340"/>
        <function-ref name="overflow" scoped="" ref="0x7efff4d0acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efff4c86da0" loc="49:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MasterAppC.UartSender"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efff4c86da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4c85180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c85310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c854a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff4c85630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff4c857c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efff4c85a10" loc="50:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MasterAppC.UartSender"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efff4c85a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff4c85d90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff4c84020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c841b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c84340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff4c844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efff4c84720" loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MasterAppC.UartSender"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff4c84720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff4c84aa0"/>
        <function-ref name="source" scoped="" ref="0x7efff4c84c30"/>
        <function-ref name="address" scoped="" ref="0x7efff4c84dc0"/>
        <function-ref name="destination" scoped="" ref="0x7efff4c83020"/>
        <function-ref name="setSource" scoped="" ref="0x7efff4c831b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff4c83340"/>
        <function-ref name="type" scoped="" ref="0x7efff4c834d0"/>
        <function-ref name="setType" scoped="" ref="0x7efff4c83660"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff4c837f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff4c83980"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff4c83b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efff4c83da0" loc="52:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MasterAppC.UartSender"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efff4c83da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efff4c82180"/>
        <function-ref name="noAck" scoped="" ref="0x7efff4c82310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efff4c824a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efff45d2d70" loc="44:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.UartSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efff45d2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff45d1180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff45d1310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff45d14a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff45d1630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff45d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7efff45d1a70" loc="46:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.UartSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efff45d1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff45d1df0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff45d0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff45d01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff45d0340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff45d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efff45d0720" loc="47:/home/xthuan/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MasterAppC.UartSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff45d0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff45d0aa0"/>
        <function-ref name="source" scoped="" ref="0x7efff45d0c30"/>
        <function-ref name="address" scoped="" ref="0x7efff45d0dc0"/>
        <function-ref name="destination" scoped="" ref="0x7efff45cf020"/>
        <function-ref name="setSource" scoped="" ref="0x7efff45cf1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff45cf340"/>
        <function-ref name="type" scoped="" ref="0x7efff45cf4d0"/>
        <function-ref name="setType" scoped="" ref="0x7efff45cf660"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff45cf7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff45cf980"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff45cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efff4cde410" loc="44:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efff4cde410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4cde790"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4cde920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4cdeab0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff4cdec40"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff4cdedd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efff4c93a40" loc="48:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efff4c93a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4c93de0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c92020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c921b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efff4c92340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff4c924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efff4c94b00" loc="46:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efff4c94b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efff4c93020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c931b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c93340"/>
        <function-ref name="cancel" scoped="" ref="0x7efff4c934d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efff4c93660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efff4c91d60" loc="50:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efff4c91d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff4c90180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff4c90310"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c904a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c90630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff4c907c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7efff4c90a90" loc="169:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7efff4c90a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff4c90e10"/>
        <function-ref name="runTask" scoped="" ref="0x7efff4c8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7efff4c8f2f0" loc="126:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7efff4c8f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efff4c8f670"/>
        <function-ref name="runTask" scoped="" ref="0x7efff4c8f800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efff4c92720" loc="49:/home/xthuan/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff4c92720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff4c92aa0"/>
        <function-ref name="source" scoped="" ref="0x7efff4c92c30"/>
        <function-ref name="address" scoped="" ref="0x7efff4c92dc0"/>
        <function-ref name="destination" scoped="" ref="0x7efff4c91020"/>
        <function-ref name="setSource" scoped="" ref="0x7efff4c911b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff4c91340"/>
        <function-ref name="type" scoped="" ref="0x7efff4c914d0"/>
        <function-ref name="setType" scoped="" ref="0x7efff4c91660"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff4c917f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff4c91980"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff4c91b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efff4c7ade0" loc="46:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="MasterAppC.UartReceiver"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efff4c7ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efff4c79180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efff4c79310"/>
        <function-ref name="getPayload" scoped="" ref="0x7efff4c794a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efff4c79630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efff4c797c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efff4c7a810" loc="45:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="MasterAppC.UartReceiver"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efff4c7a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efff4c7ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efff4c79a10" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="MasterAppC.UartReceiver"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efff4c79a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efff4c79d90"/>
        <function-ref name="source" scoped="" ref="0x7efff4c77020"/>
        <function-ref name="address" scoped="" ref="0x7efff4c771b0"/>
        <function-ref name="destination" scoped="" ref="0x7efff4c77340"/>
        <function-ref name="setSource" scoped="" ref="0x7efff4c774d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efff4c77660"/>
        <function-ref name="type" scoped="" ref="0x7efff4c777f0"/>
        <function-ref name="setType" scoped="" ref="0x7efff4c77980"/>
        <function-ref name="isForMe" scoped="" ref="0x7efff4c77b10"/>
        <function-ref name="setGroup" scoped="" ref="0x7efff4c77ca0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efff4c77e30"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/xthuan/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efff5842450" loc="62:/home/xthuan/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/xthuan/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/xthuan/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/xthuan/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7efff5843070" loc="60:/home/xthuan/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/xthuan/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7efff5815420" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7efff5817700" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7efff5816ce0" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7efff5817020" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7efff5817e70" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7efff58190e0" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7efff58197c0" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7efff58165c0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/xthuan/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/xthuan/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efff595e020" loc="62:/home/xthuan/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/xthuan/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7efff5c23dd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7efff57c3020" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efff57c5cc0" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7efff57c7390" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efff580eec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efff580d940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efff57c3890" loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7efff57c27b0" loc="59:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7efff57c5560" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efff57c2020" loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7efff57c7b30" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7efff57c6350" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7efff57c6da0" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efff580eec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efff580d940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efff57c6b20" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efff580eec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efff580d940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efff57b60e0" loc="44:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7efff57b3730" loc="84:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7efff57b34b0" loc="84:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efff57b22e0" loc="91:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efff57b2060" loc="91:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efff57b4ca0" loc="73:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efff57b43e0" loc="68:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7efff57b6a90" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efff57b6810" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efff57bd420" loc="40:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7efff57bdda0" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efff57bdb20" loc="41:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7efff57bb7d0" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efff57bb550" loc="42:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7efff57ba2a0" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efff57ba020" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efff57ba990" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efff57cd810" loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efff57ca2a0" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7efff57ca020" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efff57cc020" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efff57d3ab0" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efff57cc760" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efff57d09b0" loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efff57cd120" loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efff57d0270" loc="46:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efff57ce0e0" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7efff57ce9f0" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efff57ce770" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7efff57cacb0" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7efff57caa30" loc="56:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efff578b1f0" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7efff5881a80" loc="85:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7efff58801f0" loc="86:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7efff58812b0" loc="79:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/xthuan/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/xthuan/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/xthuan/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7efff5a9a830" loc="52:/home/xthuan/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/xthuan/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efff5cdc020" loc="57:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7efff5cdb020" loc="72:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7efff5cdc790" loc="65:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/xthuan/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/xthuan/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7efff5cd0350" loc="67:/home/xthuan/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/xthuan/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7efff5cd0ba0" loc="75:/home/xthuan/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/xthuan/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7efff5667120" loc="61:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7efff56678d0" loc="67:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7efff56660e0" loc="72:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7efff5665070" loc="83:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7efff56637d0" loc="100:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efff5662020" loc="117:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7efff5666870" loc="77:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efff5662b90" loc="134:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efff5662910" loc="134:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7efff5668970" loc="56:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7efff5665850" loc="89:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7efff5663020" loc="94:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/xthuan/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efff5658730" loc="44:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efff5658e60" loc="45:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efff565a8e0" loc="42:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efff5657cf0" loc="47:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efff5658020" loc="43:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efff56575b0" loc="46:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efff565daa0" loc="40:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efff565a1f0" loc="41:/home/xthuan/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efff562d7c0" loc="78:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efff562c020" loc="80:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7efff5628b10" loc="110:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efff5628890" loc="110:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efff562f020" loc="58:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efff562b020" loc="87:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7efff5627490" loc="117:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efff562c760" loc="85:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efff562d020" loc="73:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7efff5629770" loc="99:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7efff562f7c0" loc="66:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efff5630020" loc="48:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7efff562b7a0" loc="92:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7efff5628020" loc="101:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7efff5629020" loc="94:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efff5630750" loc="53:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7efff53f0110" loc="113:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efff53f1e40" loc="113:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7efff53ef600" loc="138:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efff53ef380" loc="138:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efff53f1460" loc="104:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efff53f0960" loc="130:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/xthuan/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efff538a300" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
              <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff53ee950" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efff53eeca0" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff538a020" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff5394a60" loc="53:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff5394a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efff53807c0" loc="136:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efff5384070" loc="83:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7efff5382df0" loc="114:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efff5382820" loc="114:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efff5382b60" loc="114:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7efff5382070" loc="98:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7efff537f8a0" loc="151:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7efff537f020" loc="144:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efff5384850" loc="92:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7efff53865f0" loc="64:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efff5386370" loc="64:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7efff5381dc0" loc="129:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efff53817f0" loc="129:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efff5381b30" loc="129:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7efff5385110" loc="73:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efff5386e30" loc="73:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efff5385910" loc="78:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/xthuan/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efff53f2aa0" loc="65:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff53f2820" loc="65:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7efff5392ba0" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5392920" loc="78:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efff538e020" loc="126:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff538f910" loc="126:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff538fc40" loc="126:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efff538f020" loc="106:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7efff5393050" loc="94:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5391a70" loc="94:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5391da0" loc="94:/home/xthuan/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x7efff539d970" loc="80:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efff539d020" loc="80:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efff539d3a0" loc="80:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff539d6d0" loc="80:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efff5397160" loc="135:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5398ae0" loc="135:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5398e10" loc="135:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efff5398270" loc="123:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efff539bcd0" loc="96:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff539ba50" loc="96:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efff53993a0" loc="110:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff539cd70" loc="110:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efff5399110" loc="110:/home/xthuan/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7efff534a120" loc="59:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff535de80" loc="59:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7efff5348350" loc="71:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff53480d0" loc="71:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7efff5347510" loc="85:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5347290" loc="85:/home/xthuan/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7efff5350560" loc="177:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efff53af930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff53502e0" loc="177:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7efff5359110" loc="88:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff535ae30" loc="88:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7efff535c510" loc="68:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7efff535a020" loc="78:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff535cd50" loc="78:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7efff5356b10" loc="121:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff5356530" loc="121:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efff5356880" loc="121:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7efff5358600" loc="103:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff5358020" loc="103:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efff5358370" loc="103:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efff53afd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7efff5353040" loc="147:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff5355da0" loc="147:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7efff53513a0" loc="162:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff5353dc0" loc="162:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7efff5351110" loc="162:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efff53af550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7efff5354da0" loc="136:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff5354b20" loc="136:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7efff534ea30" loc="187:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efff53af930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efff534e450" loc="187:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7efff534e7a0" loc="187:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efff53af930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7efff534c890" loc="195:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/xthuan/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efff53af930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efff533de10" loc="75:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff533d850" loc="75:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff533db80" loc="75:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efff5334620" loc="125:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5334020" loc="125:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5334350" loc="125:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efff5335660" loc="112:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efff53392a0" loc="89:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5339020" loc="89:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efff5337750" loc="100:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff5337170" loc="100:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efff53374c0" loc="100:/home/xthuan/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7efff52d4630" loc="31:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff52d4020" loc="31:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7efff52d43a0" loc="31:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7efff52d6670" loc="15:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7efff52d5620" loc="23:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efff52d5020" loc="23:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:138" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efff53a01c0"/>
                <typename><typedef-ref name="message_t" ref="0x7efff539f7f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7efff52d5390" loc="23:/home/xthuan/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efff52b70e0" loc="95:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efff52b78f0" loc="105:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/xthuan/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7efff52b4790" loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7efff52b4020" loc="49:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/xthuan/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7efff52bf120" loc="56:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7efff52be560" loc="72:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7efff52bb2a0" loc="94:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efff52bb020" loc="94:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7efff52bede0" loc="79:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7efff52bfc90" loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efff52bfa10" loc="65:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7efff52bbb00" loc="100:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7efff52bc6e0" loc="85:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/xthuan/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7efff52c7990" loc="71:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7efff52c6350" loc="81:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7efff52c7020" loc="62:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7efff52cac30" loc="62:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7efff52c5020" loc="91:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efff52c6c50" loc="91:/home/xthuan/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7efff52c9c60" loc="62:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7efff52c2a60" loc="69:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efff52c27e0" loc="69:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7efff52c15c0" loc="80:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efff52c1340" loc="80:/home/xthuan/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efff518cc40" loc="48:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efff518c670" loc="48:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff518c9b0" loc="48:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7efff5187a70" loc="79:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efff51877f0" loc="79:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efff5186890" loc="90:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efff51862c0" loc="90:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5186600" loc="90:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7efff5188610" loc="65:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7efff51842c0" loc="99:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efff5183820" loc="99:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5183b60" loc="99:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efff5184020" loc="99:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7efff5187020" loc="72:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efff5189610" loc="57:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efff518abd0" loc="57:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efff5189020" loc="57:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efff5189370" loc="57:/home/xthuan/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efff51645b0" loc="50:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efff5164330" loc="50:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7efff5164df0" loc="59:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efff5162cf0" loc="69:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efff5162700" loc="69:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7efff5162a60" loc="69:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7efff5160b50" loc="79:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/xthuan/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7efff5108270" loc="53:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efff5108ba0" loc="61:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/xthuan/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/xthuan/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efff5104070" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efff512c450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efff512c870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efff510b9c0" loc="120:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7efff510d990" loc="97:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7efff510d020" loc="88:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efff510b1f0" loc="102:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efff510a470" loc="128:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/xthuan/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7efff50fc510" loc="65:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7efff50ffcc0" loc="59:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/xthuan/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/xthuan/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7efff50f32a0" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efff50f3020" loc="54:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7efff50f4780" loc="49:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/xthuan/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7efff50ceaf0" loc="213:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7efff50da790" loc="143:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7efff50e6530" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff515c3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efff515cbf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efff50e62b0" loc="50:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff515c3b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efff515cbf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7efff50dc870" loc="123:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7efff50e4a40" loc="70:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5157360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efff5157ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efff50e47c0" loc="70:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5157360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efff5157ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7efff50d3e70" loc="180:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7efff50d0480" loc="197:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7efff50e4020" loc="65:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5159290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7efff5159a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7efff50e3270" loc="75:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5157360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7efff5157ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7efff50df020" loc="97:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7efff50e0d30" loc="97:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7efff50e0610" loc="95:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7efff50d3740" loc="179:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7efff50e5780" loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5159290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efff5159a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efff50e5500" loc="60:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff5159290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efff5159a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7efff50e1420" loc="85:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7efff50d25d0" loc="181:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7efff50e1e00" loc="90:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7efff50e1b80" loc="90:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7efff50de910" loc="113:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7efff50dc0e0" loc="118:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7efff50d5840" loc="177:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7efff50d7790" loc="163:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7efff50db7e0" loc="133:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7efff50d3020" loc="178:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7efff50d8020" loc="148:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7efff50d2cf0" loc="182:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efff50df800" loc="103:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efff5165330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7efff515ea50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7efff50d14c0" loc="187:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7efff50ce350" loc="207:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7efff50e3c10" loc="80:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7efff50e3990" loc="80:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efff635d520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7efff50cd4d0" loc="224:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efff50cd250" loc="224:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7efff50e6d10" loc="55:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efff515c3b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7efff515cbf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7efff50db020" loc="128:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7efff50d8770" loc="153:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7efff50d5020" loc="174:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efff512c450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efff512c870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efff50d6cf0" loc="174:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efff512c450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efff512c870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7efff50d62a0" loc="168:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efff513f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efff513f840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efff50d6020" loc="168:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efff513f420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efff513f840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7efff50cdd90" loc="231:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7efff50d1cb0" loc="192:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7efff50de070" loc="108:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7efff50d0be0" loc="202:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7efff50d7020" loc="158:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7efff50da020" loc="138:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff50c5410" loc="57:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff50c5410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efff50c5650" loc="57:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff50c5650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efff50c4020" loc="64:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff50c5650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efff50c3120" loc="76:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efff50c48a0" loc="71:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efff50c3880" loc="82:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/xthuan/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efff5052860" loc="95:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efff50510e0" loc="105:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/xthuan/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7efff4f91020" loc="90:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7efff4f91880" loc="98:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/xthuan/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efff635d160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efff4f7d4a0" loc="39:/home/xthuan/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efff4f63900" loc="56:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7efff4f62a20" loc="73:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efff4f63070" loc="46:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efff4f621f0" loc="65:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efff4f61390" loc="81:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/xthuan/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7efff4f56b60" loc="79:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efff5cd7cb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efff4f5fb40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efff4f568e0" loc="79:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efff4f5fb40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7efff4f5ab90" loc="53:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7efff4f576f0" loc="62:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efff4f5fb40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efff4f57470" loc="62:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efff4f5fb40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efff4f56030" loc="70:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/xthuan/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7efff4f5fb40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/xthuan/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/xthuan/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7efff4ee94b0" loc="62:/home/xthuan/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/xthuan/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/xthuan/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff4e79580" loc="53:/home/xthuan/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff4e79580"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efff4e75020" loc="61:/home/xthuan/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/xthuan/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efff635d920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efff4e70070" loc="56:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efff4e70070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efff4e702b0" loc="56:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efff4e6ce00" loc="109:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efff4e6fe40" loc="78:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7efff4e6c460" loc="103:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efff4e6ee60" loc="103:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7efff4e6c1d0" loc="103:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efff4e6e640" loc="88:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efff5ce0090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7efff4e6b620" loc="116:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efff4e70e10" loc="66:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efff4e70b90" loc="66:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efff4e702b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efff4e6f680" loc="73:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/xthuan/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
